{"version":3,"sources":["assets/images/loading.svg","components/Home/Home.js","components/Profile.js","config/api.js","store/location/locationAction.js","store/location/locationActionType.js","store/location/locationSelector.js","components/LocationDetails.js","components/MapView/fetchFakeData.js","components/MapView/Popup.js","components/MapView/FetchData.js","components/MapView.js","components/Filter.js","components/Search/Search.jsx","components/Filters/SwitchesGroup.js","components/Filters/Filters.js","components/Copyright.jsx","components/LoginButton.js","components/LogoutButton.js","components/AuthenticationButton.js","components/AuthNav.js","components/Header/NavDrawer.js","components/Header/Header.js","components/SingleLocation.js","components/Loading.js","auth/protected-route.js","components/AddLocation.js","components/ManageLocations.js","App.js","serviceWorker.js","store/user/userReducer.js","store/user/userActionType.js","store/location/locationReducer.js","store/rootReducer.js","store/index.js","auth/auth0-provider-with-history.js","index.js"],"names":["module","exports","Header","className","style","padding","Grid","container","spacing","item","md","xs","icon","Typography","variant","component","gutterBottom","to","textDecoration","Button","color","Profile","user","useAuth0","name","picture","email","sub","src","alt","JSON","stringify","getLocation","dispatch","a","type","axios","get","apiConfig","result","payload","data","console","log","toast","error","message","addLocation","locationData","post","success","locationList","state","location","getLocationLoading","addLocationLoading","deleteLocationLoading","updateLocationLoading","LocationDetails","features","locationId","match","params","number","useDispatch","locationListSelector","useSelector","getLocationList","useCallback","useEffect","filter","parseInt","drinkable","locationName","pictureURL","value","rating","max","onChange","List","aria-label","Divider","ListItem","ListItemIcon","fontSize","ListItemText","primary","divider","inset","address1","city","country","postCode","size","disableElevation","sm","getRandomCoordinate","centerLon","longitude","centerLat","latitude","r","Math","sqrt","random","theta","PI","cos","sin","fetchFakeData","centerCoordinates","newFeaturesList","i","id","push","geometry","coordinates","properties","description","WC","Water","stars","status","Promise","resolve","Popup","feature","onClick","window","href","fetch","then","response","json","forEach","element","maleToilets","water","FetchData","ReactDOM","require","mapboxgl","accessToken","MapView","props","mapContainerRef","useRef","popUpRef","offset","geolocate","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","map","Map","current","center","zoom","addControl","NavigationControl","on","e","position","coords","geocoder","MapboxGeocoder","document","getElementById","childNodes","appendChild","onAdd","addSource","addLayer","source","layout","getCenter","lng","lat","results","getSource","setData","length","getCanvas","cursor","popupNode","createElement","render","setLngLat","setDOMContent","addTo","remove","ref","Filter","Search","handleTextChange","event","setState","text","target","geoClicked","saveLocsClicked","searchEntered","buttonText","this","toString","redirect","keyCode","searchStr","searchString","TextField","label","placeholder","onKeyDown","handleEnterKeyPress","InputProps","startAdornment","InputAdornment","startIcon","handleClick","Component","SwitchesGroup","useState","toilet","handleChange","checked","filterResults","FormControl","FormLabel","FormGroup","FormControlLabel","control","Switch","waterFacilities","toiletFacilities","waterLocations","toiletLocations","femaleToilets","Copyright","Box","mt","align","Link","Date","getFullYear","LoginButton","loginWithRedirect","LogoutButton","logout","returnTo","origin","AuthenticationButton","isAuthenticated","AuthNav","NavDrawer","classes","display","Drawer","width","varian","anchor","open","drawerOpened","onClose","toggleDrawer","paper","drawerPaper","link","button","withStyles","theme","marginTop","breakpoints","down","palette","marginBottom","booleanValue","root","AppBar","Toolbar","IconButton","edge","menuButton","title","React","flexGrow","marginRight","SingleLoaction","top","left","transform","Loading","image","ProtectedRoute","args","withAuthenticationRequired","onRedirecting","useStyles","makeStyles","formControl","minWidth","selectEmpty","AddLocation","options","countryList","getData","setOpen","setLocationName","setAddress1","address2","setAddress2","setCity","setPostCode","setCountry","addLocationLoadingSelector","clearState","handleClose","handleSubmit","process","geoCodingData","adminOrg","treatment","unknown","largeWaterFacility","largeToiletFacility","disabledAccess","chargeForUse","openingHours","hasIssue","justify","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","noValidate","autoComplete","margin","fullWidth","required","InputLabel","Select","labelId","MenuItem","key","DialogActions","CircularProgress","ListLocation","getLocationLoadingSelector","deleteLocationLoadingSelector","updateLocationLoadingSelector","deleteLocationId","setDeleteLocationId","updateLocationId","setUpdateLocationId","removeLocation","delete","LinearProgress","index","marginLeft","updateLocationStatus","library","add","fab","faHandHoldingWater","faTrash","faTrashAlt","faPen","faEye","createMuiTheme","main","typography","fontFamily","join","App","isLoading","ThemeProvider","StylesProvider","injectFirst","Container","maxWidth","path","Filters","ManageLocations","SingleLocation","exact","Home","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","initialUserState","userList","userReducer","initialLocationState","locationReducer","reducer","combineReducers","logger","createLogger","collapsed","store","createStore","undefined","composeWithDevTools","applyMiddleware","thunk","Auth0ProviderWithHistory","children","history","useHistory","domain","clientId","redirectUri","onRedirectCallback","appState","pathname","audience","configure","autoClose","URL","addEventListener","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e6bc4483.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.2dc69883.svg\";","import React from \"react\";\nimport { Link} from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport \"./Home.css\";\n\nfunction Header() {\n\n  return (\n    <div className=\"Header\" style={{ padding: 20 }}>\n      <Grid container spacing={0}>\n        <Grid item md></Grid>\n        <Grid item xs={12} md={6}>\n          <FontAwesomeIcon icon=\"hand-holding-water\" className=\"spl--pb\" />\n\n          <Typography\n            variant=\"h2\"\n            component=\"h1\"\n            gutterBottom\n            className=\"spl--pb\"\n          >\n            Welcome to Oasis\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom className=\"spl--pb\">\n            Find for your nearest drinking water and toilet facilities\n\n      </Typography>\n          <Link to=\"/locations\" style={{ textDecoration: 'none' }}> \n\n          \n\n            <Button variant=\"contained\" color=\"primary\" >\n              Search locations\n            </Button>\n          </Link>\n\n        </Grid>\n        <Grid item md></Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Header;\n","// src/views/profile.js\n\nimport React from \"react\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Profile = () => {\n  const { user } = useAuth0();\n  const { name, picture, email, sub } = user;\n\n  return (\n    <div>\n      <div className=\"row align-items-center profile-header\">\n        <div className=\"col-md-2 mb-3\">\n          <img\n            src={picture}\n            alt=\"Profile\"\n            className=\"rounded-circle img-fluid profile-picture mb-3 mb-md-0\"\n          />\n        </div>\n        <div className=\"col-md text-center text-md-left\">\n          <h2>{name}</h2>\n          <p>User id: {sub}</p>\n          <p className=\"lead text-muted\">{email}</p>\n        </div>\n      </div>\n      <div className=\"row\">\n        <pre className=\"col-12 text-light bg-dark p-4\">\n          {JSON.stringify(user, null, 2)}\n        </pre>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","export default {\n    //API_BASE_URL: 'http://localhost:3001'\n    API_BASE_URL: 'https://j33niy2o35.execute-api.eu-west-2.amazonaws.com/dev/'\n}","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nimport apiConfig from '../../config/api';\nimport * as locationActionType from './locationActionType';\n\nexport const getLocation = () => async (dispatch) => {\n    try {\n        dispatch({ type: locationActionType.GET_LOCATION_BEGINS });\n        const result = await axios.get(`${apiConfig.API_BASE_URL}/locations`);\n        dispatch({\n            type: locationActionType.GET_LOCATION_SUCCESS,\n            payload: result.data\n        });\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: locationActionType.GET_LOCATION_FAILURE });\n        toast.error(error.message);\n    }\n}\n\nexport const addLocation = (locationData) => async (dispatch) => {\n    try {\n        dispatch({ type: locationActionType.ADD_LOCATION_BEGINS });\n        const result = await axios.post(`${apiConfig.API_BASE_URL}/locations`, locationData);\n            dispatch({\n                type: locationActionType.ADD_LOCATION_SUCCESS,\n                payload: result.data\n            });\n            dispatch(getLocation());\n            toast.success('Location Added Successfully!');\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: locationActionType.ADD_LOCATION_FAILURE });\n        toast.error(error.message);\n        throw error;\n    }\n}\n\nexport const deleteLocation = (locationId) => async (dispatch) => {\n    try {\n        dispatch({ type: locationActionType.DELETE_LOCATION_BEGINS });\n        await axios.delete(`${apiConfig.API_BASE_URL}/locations?locationId=${locationId}`);\n            dispatch({\n                type: locationActionType.DELETE_LOCATION_SUCCESS,\n                payload: locationId\n            });\n            toast.success('Location Deleted Successfully!');\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: locationActionType.DELETE_LOCATION_FAILURE });\n        toast.error(error.message);\n        throw error;\n    }\n}\n\nexport const updateLocationStatus = (locationData) => async (dispatch) => {\n    try {\n        dispatch({ type: locationActionType.UPDATE_LOCATION_BEGINS });\n        const result = await axios.put(`${apiConfig.API_BASE_URL}/locations?locationId=${locationData.locationId}`, locationData);\n            dispatch({\n                type: locationActionType.UPDATE_LOCATION_SUCCESS,\n                payload: result.data\n            });\n            toast.success('Location Updated Successfully!');\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: locationActionType.UPDATE_LOCATION_FAILURE });\n        toast.error(error.message);\n        throw error;\n    }\n}","export const GET_LOCATION_BEGINS = 'GET_LOCATION_BEGINS';\nexport const GET_LOCATION_SUCCESS = 'GET_LOCATION_SUCCESS';\nexport const GET_LOCATION_FAILURE = 'GET_LOCATION_FAILURE';\n\nexport const ADD_LOCATION_BEGINS = 'ADD_LOCATION_BEGINS';\nexport const ADD_LOCATION_SUCCESS = 'ADD_LOCATION_SUCCESS';\nexport const ADD_LOCATION_FAILURE = 'ADD_LOCATION_FAILURE';\n\nexport const DELETE_LOCATION_BEGINS = 'DELETE_LOCATION_BEGINS';\nexport const DELETE_LOCATION_SUCCESS = 'DELETE_LOCATION_SUCCESS';\nexport const DELETE_LOCATION_FAILURE = 'DELETE_LOCATION_FAILURE';\n\nexport const UPDATE_LOCATION_BEGINS = 'UPDATE_LOCATION_BEGINS';\nexport const UPDATE_LOCATION_SUCCESS = 'UPDATE_LOCATION_SUCCESS';\nexport const UPDATE_LOCATION_FAILURE = 'UPDATE_LOCATION_FAILURE';","export const locationList = (state) => state.location.locationList;\nexport const getLocationLoading = (state) => state.location.getLocationLoading;\nexport const addLocationLoading = (state) => state.location.addLocationLoading;\nexport const deleteLocationLoading = (state) => state.location.deleteLocationLoading;\nexport const updateLocationLoading = (state) => state.location.updateLocationLoading;","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Rating from 'material-ui-rating';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { getLocation } from '../store/location/locationAction';\nimport { locationList } from '../store/location/locationSelector';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport DoneIcon from '@material-ui/icons/Done';\n\n\nconst LocationDetails = (features) => {\n\n    let locationId = features.match.params.number;\n    console.log('idddd', locationId);\n    const dispatch = useDispatch();\n    const locationListSelector = useSelector(locationList);\n    let locationData;\n\n    const getLocationList = useCallback(() => {\n        dispatch(getLocation());\n    }, [dispatch]);\n    useEffect(() => {\n        getLocationList();\n    }, [getLocationList]);\n    if (locationListSelector) {\n        locationData = locationListSelector.filter((location) => location.locationId === parseInt(locationId))[0];\n    }\n\n\n    if (locationData) {\n        console.log('data  ', locationData);\n        let drinkable = '';\n        if (locationData.drinkable === true) {\n            drinkable = 'Drinkable';\n        } else {\n            drinkable = 'Needs treatment';\n        }\n        return (\n\n            <Grid container spacing={0}>\n                <Grid item md></Grid>\n                <Grid item xs={12} md={8}>\n                    {/* <CardContent> */}\n                    <Typography\n                        variant=\"h4\"\n                        component=\"h1\"\n                        gutterBottom\n                        className=\"spl--pb spl--pt\"\n                    >\n                        {locationData.locationName}\n\n                    </Typography>\n\n                    <div className=\"spl--pb\">\n                        <img src={locationData.pictureURL} alt={locationData.locationName} className=\"responsive\" />\n                    </div>\n                    <Grid container spacing={0}>\n                        <Grid item xs={2}>\n                            <Typography\n                                variant=\"h6\"\n                                component=\"h4\"\n                            >\n                                Rating\n\n                        </Typography>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Rating\n                                value={locationData.rating}\n                                max={5}\n                                onChange={(value) => console.log(`Rated with value ${value}`)}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <List component=\"nav\" aria-label=\"location status\">\n                    <Divider />\n                        <ListItem>\n                            <ListItemIcon>\n                                <DoneIcon fontSize=\"large\" color=\"primary\" />\n                            </ListItemIcon>\n                            <ListItemText primary={drinkable} />\n                        </ListItem>\n                        <Divider />\n                        <ListItem divider>\n                            <ListItemText inset primary=\"Needs Treatment\" />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText inset primary=\"Uknown\" />\n                        </ListItem>\n                    </List>\n\n                    <Typography\n                        variant=\"h6\"\n                        component=\"h3\"\n                        className=\"spl--pb spl--pt\"\n                    >\n                        Address\n                        </Typography>\n                        <Typography variant=\"body1\" gutterBottom>\n                            {locationData.address1}<br></br>\n                            {locationData.city}<br></br>\n                            {locationData.country}<br></br>\n                            {locationData.postCode}<br></br>\n                        </Typography>\n\n                    <Button size=\"small\" color=\"primary\">\n                        Report a problem\n                        </Button>\n                    <Button size=\"small\" variant=\"contained\" color=\"primary\" disableElevation>\n                        Notify me\n                        </Button>\n                </Grid>\n                <Grid item md></Grid>\n            </Grid>\n\n        )\n    } else {\n        return (\n\n            <Grid container spacing={0}>\n                <Grid item xs={12} sm={6}>\n                    <Typography variant=\"h5\">loading .....</Typography>\n\n                </Grid>\n            </Grid>\n        );\n    }\n\n}\n\nexport default LocationDetails;","\n\nfunction fetchFakeData(centerCoordinates) {\n    const newFeaturesList = [];\n    for (let i = 0; i < 20; i++) {\n        const id = i;\n        const { longitude, latitude } = getRandomCoordinate(centerCoordinates);\n        newFeaturesList.push({\n            type: 'Feature',\n            geometry: {\n                type: 'Point',\n                coordinates: [longitude, latitude],\n            },\n            properties: {\n                id,\n                name: `Random Point #${id}`,\n                description: `description for Random Point #${id}`,\n                WC: true,\n                Water: true,\n                stars: 4,\n                status: 'drinkable'\n            },\n        });\n    }\n    return Promise.resolve({\n        type: 'FeatureCollection',\n        features: newFeaturesList,\n    });\n};\n\n/**\n * Generates a random point within 0.025 radius of map center coordinates.\n * @param {CoordinatePair} centerCoordinates - the {@link CoordinatePair} for the map center\n * @return {CoordinatePair} randomly generated coordinate pair\n */\nconst getRandomCoordinate = ({ longitude: centerLon, latitude: centerLat }) => {\n    const r = 0.025 * Math.sqrt(Math.random());\n    const theta = Math.random() * 2 * Math.PI;\n    const latitude = centerLat + r * Math.cos(theta);\n    const longitude = centerLon + r * Math.sin(theta);\n    return { longitude, latitude };\n};\n\nexport default fetchFakeData;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Rating from 'material-ui-rating';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst Popup = ({ feature }) => {\n    //onst { id, name, description, status, stars } = feature.properties;\n    const { id, name, stars } = feature.properties;\n    function Detailpage() {\n\n        window.location.href = `/location-details/${id}`;\n\n    }\n    return (\n        <Grid container spacing={0} className=\"popupdiv\">\n            <Grid item xs={12}>\n                <Typography>{name}</Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Rating\n                    value={stars}\n                    max={5}\n                    onChange={(value) => console.log(`Rated with value ${value}`)}\n                    className=\"spl-star\"\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <Button color=\"primary\" onClick={Detailpage}>\n                    Details\n            </Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Popup;","\n\nasync function  FetchData ({ longitude: centerLon, latitude: centerLat }) {\n   \n    const newFeaturesList = [];\n    \n     // Simple GET request using fetch\n    await fetch(`https://j33niy2o35.execute-api.eu-west-2.amazonaws.com/dev/locations?longitude=${centerLon}&latitude=${centerLat}`)\n     .then(response => response.json())\n     .then(data =>  data.forEach(element => {\n         console.log(element);\n         let id =element.locationId;\n         newFeaturesList.push({\n                type: 'Feature',\n                geometry: {\n                    type: 'Point',\n                    coordinates: [element.longitude, element.latitude],\n                },\n                properties: {\n                    id,\n                    name: element.locationName,\n                    city: element.city,\n                    WC: element.maleToilets,\n                    Water:  element.water,\n                    stars:element.rating,\n                    status: element.drinkable\n                },\n            })\n         \n     }) \n     \n     \n     );\n\n    return Promise.resolve({\n        type: 'FeatureCollection',\n        features: newFeaturesList,\n    });\n};\n\n\n\nexport default FetchData;","import React, { useRef, useEffect } from \"react\";\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\nimport fetchFakeData from './MapView/fetchFakeData';\n//import Marker from './MapView/Marker'; unused marker\nimport Popup from './MapView/Popup';\nimport FetchData from './MapView/FetchData'\n\n// for using maps you need to install ->  npm install mapbox-gl --save\n// install for search feild -> npm install --save @mapbox/mapbox-gl-geocoder\n//install readdom -> npm install react react-dom\n\nvar ReactDOM = require('react-dom');\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2FuYWVzcGxhc2giLCJhIjoiY2tmYTlwMWpmMHR0cDJ0cHAyOHZhd3V0MSJ9.PmRGRrM4p1wgKavJKm-56A'\n\n\nconst MapView = ({ props }) => {\n // console.log(`${searchString} was given to MapView`);\n  \n  const mapContainerRef = useRef(null);\n  const popUpRef = useRef(new mapboxgl.Popup({ offset: [20, 0] }));\n  const geolocate = new mapboxgl.GeolocateControl({\n    positionOptions: {\n      enableHighAccuracy: true\n    },\n    trackUserLocation: true\n  });\n  // initialize map when component mounts\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      // See style options here: https://docs.mapbox.com/api/maps/#styles\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [-1.9876, 51.7405],\n      zoom: 12.5,\n    });\n\n    // add navigation control (the +/- zoom buttons) and geolocate user\n    map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n    map.addControl(geolocate.on('geolocate', function (e) {\n      var lon = e.coords.longitude;\n      var lat = e.coords.latitude;\n      var position = [lon, lat];\n      console.log(position);\n\n    })\n    );\n    // map's search feild\n    // map.addControl(\n    //   new MapboxGeocoder({\n    //     accessToken: mapboxgl.accessToken,\n    //     mapboxgl: mapboxgl\n    //   })\n    // );\n    var geocoder = new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken,\n      mapboxgl: mapboxgl\n    });\n\n    var search = document.getElementById(\"geocoder\");   // test if element exist \n    if (!search.childNodes[0]){\n    document.getElementById('geocoder').appendChild(geocoder.onAdd(map));\n    }\n    map.on(\"load\", () => {\n      // add the data source for new a feature collection with no features\n      // geolocate.trigger(); -> use when the search button is triggered \n      map.addSource(\"random-points-data\", {\n        type: \"geojson\",\n        data: {\n          type: \"FeatureCollection\",\n          features: []\n        }\n      });\n      // now add the layer, and reference the data source above by name\n      map.addLayer({\n        id: \"random-points-layer\",\n        source: \"random-points-data\",\n        type: \"symbol\",\n        layout: {\n          // full list of icons here: https://labs.mapbox.com/maki-icons\n          \"icon-image\": \"drinking-water-15\",\n          \"icon-padding\": 0,\n          'icon-size': 1.5,\n          \"icon-allow-overlap\": true\n        }\n      });\n\n    });\n\n    map.on(\"moveend\", async () => {\n      // get new center coordinates\n      const { lng, lat } = map.getCenter();\n      console.log(lng,lat);\n      // fetch new data\n      const results = await fetchFakeData({ longitude: lng, latitude: lat });\n      console.log(results);\n\n      const r=  await FetchData({ longitude: lng, latitude: lat });\n      //console.log(r);\n      // update \"random-points-data\" source with new data\n      // all layers that consume the \"random-points-data\" data source will be updated automatically\n      map.getSource(\"random-points-data\").setData(r);\n    });\n\n    // change cursor to pointer when user hovers over a clickable feature\n    map.on(\"mouseenter\", \"random-points-layer\", e => {\n      if (e.features.length) {\n        map.getCanvas().style.cursor = \"pointer\";\n      }\n    });\n\n    // reset cursor to default when user is no longer hovering over a clickable feature\n    map.on(\"mouseleave\", \"random-points-layer\", () => {\n      map.getCanvas().style.cursor = \"\";\n    });\n\n    // add popup when user clicks a point\n    map.on(\"click\", \"random-points-layer\", e => {\n      if (e.features.length) {\n        const feature = e.features[0];\n        // create popup node\n        const popupNode = document.createElement(\"div\");\n        ReactDOM.render(<Popup feature={feature} />, popupNode);\n        // set popup on map\n        popUpRef.current\n          .setLngLat(feature.geometry.coordinates)\n          .setDOMContent(popupNode)\n          .addTo(map);\n      }\n    });\n\n    // map.on('moveend', async () => {\n    //   // get center coordinates\n    //   const { lng, lat } = map.getCenter();\n    //   // fetch new data\n    //   const results = await fetchFakeData({ longitude: lng, latitude: lat });\n    //   // iterate through the feature collection and append marker to the map for each feature\n    //   results.features.forEach(result => {\n    //     const { id, geometry } = result;\n    //     // create marker node\n    //     const markerNode = document.createElement('div');\n    //     ReactDOM.render(<Marker id={id} />, markerNode);\n    //     // add marker to map\n    //     new mapboxgl.Marker(markerNode)\n    //       .setLngLat(geometry.coordinates)\n    //       .addTo(map);\n    //   });\n    // });\n\n    // clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return <div className=\"map-container\" ref={mapContainerRef} />\n};\n\nexport default MapView;","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n//import SwitchesGroup from \"./SwitchesGroup\";\nimport MapView from \"./MapView\";\n//import {useLocation } from \"react-router-dom\"\n\n\n// const locations = [\n//   {\n//     id: 1,\n//     name: \"london\",\n//     longitude: \"51.5074\",\n//     latitude: \" 0.1278\",\n//     status: \"Drinkable\",\n//     isWater: false,\n//     isWc: true,\n//   },\n//   {\n//     id: 2,\n//     name: \"Santiago\",\n//     longitude: \"54.5074\",\n//     latitude: \" 7.1278\",\n//     status: \"Need traitment\",\n//     isWater: true,\n//     isWc: true,\n//   },\n//   {\n//     id: 3,\n//     name: \"Santiago\",\n//     longitude: \"94.5074\",\n//     latitude: \" 7.1278\",\n//     status: \"Drinkable\",\n//     isWater: true,\n//     isWc: false,\n//   },\n//   {\n//     id: 4,\n//     name: \"Santiago\",\n//     longitude: \"04.5074\",\n//     latitude: \" 7.1278\",\n//     status: \"Uknown\",\n//     isWater: true,\n//     isWc: true,\n//   },\n// ];\n\nfunction Filter(props) {\n\n\n//   const filterData = (locations, state) => {\n//     if (locations === undefined) throw new Error(\"locations is required\");\n//     if (state === undefined) throw new Error(\"state is required\");\n//   }\n// //     var results = [];\n\n//     if (state.waterOn) {\n//       console.log(\"water is ON\");\n//       for (let i = 0; i < locations.length; i++) {\n//         if (locations[i].isWater) {\n//           results.push(locations[i]);\n//         }\n//       }\n//     } else if (state.wcOn) {\n//       console.log(\"Toilets is ON\");\n//       for (let i = 0; i < locations.length; i++) {\n//         if (locations[i].isWc) {\n//           results.push(locations[i]);\n//         }\n//       }\n//     }\n//     console.log(results);\n//     return results;\n//   };\n\n//   const filterResults = (state) => {\n//     if (state.waterOn && state.wcOn) {\n//       console.log(\"Both filters are ON\");\n//       return locations;\n//     } else {\n//       return filterData(locations, state);\n//     }\n//   };\n\n\n  return (\n    <Grid container id=\"container\">\n      <Grid item xs={12} md={12}>\n        <MapView props={props} />\n      </Grid>\n      <Grid item xs={12} md={12}>\n        {/* <SwitchesGroup filterResults={filterResults} /> */}\n      </Grid>\n    </Grid>\n  );\n}\n\n export default Filter;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport GpsFixedTwoToneIcon from '@material-ui/icons/GpsFixedTwoTone';\nimport SettingsTwoToneIcon from '@material-ui/icons/SettingsTwoTone';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n// import Login from '../Login/Login.jsx';\n// import LocationListing from '../LocationListing.js';\n\n// import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//     Link,\n//     useRouteMatch,\n//     useParams,\n//   } from \"react-router-dom\";\n\n// import { Redirect } from 'react-router';\n// import { Home, LocationSearching } from '@material-ui/icons';\n//import MapView from '../MapView';\nimport Filter from '../Filter';\n\nclass Search extends Component {\n    //state = { text:'', geoClicked: false, saveLocsClicked: false, searchEntered: false }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: '',\n            geoClicked: false,\n            saveLocsClicked: false,\n            searchEntered: false\n        }\n    }\n\n    // search() {\n    //     console.log('this.state', this.state);\n    // }\n\n    handleClick(buttonText) {\n        console.log(`${buttonText} Clicked`);\n        if (buttonText === 'geolocation') {\n            console.log(`${buttonText} Clicked2`);\n            // this.setState({ geoClicked: true });\n            //this.state.geoClicked = true;\n            this.setState({ geoClicked: true });\n        }\n        else // can only be gelocation or savedLocations button clicked.\n        {\n            console.log(`${buttonText} Clicked3`);\n            //this.state.saveLocsClicked = true;\n            this.setState({ saveLocsClicked: true });\n        }\n        console.log(this.state.geoClicked.toString());\n        console.log(this.state.saveLocsClicked.toString());\n        console.log(this.state.searchEntered.toString());\n        this.setState({ redirect: true });\n    }\n\n    handleEnterKeyPress(event) {\n        if (event.keyCode === 13) {\n            let searchStr = event.target.value;\n            console.log(`${searchStr}<ENTER>`);\n            // console.log(`${event.target.value}<ENTER>`);\n\n            // return (<LocationListing /> )\n\n            this.setState({ searchEntered: true })\n            //    this.state.searchEntered = true;\n\n            // console.log(this.state.geoClicked.toString());\n            // console.log(this.state.saveLocsClicked.toString());\n            // console.log(this.state.searchEntered.toString());\n            //            this.setState({redirect: true});\n\n            event.target.value = '';  // potentially have to place this elsewhere\n        }\n    }\n\n    handleTextChange = (event) => {\n        this.setState({ text: event.target.value });\n    }\n\n    render() {\n        if (this.state.redirect && this.state.geoClicked) {\n            // let params = { searchString: '', isGeo: true}\n            // let params = { searchString: 'geolocation'}\n            let searchString = 'geolocation';\n            console.log(`passing to Filter1 - ${searchString}`)\n            return <Filter searchString={searchString} />\n        }\n        else if (this.state.redirect && this.state.saveLocsClicked) {\n            console.log('Into Managed Saved Locations');\n            // return <ManageSavedLocations />\n        }\n        //        else if ( this.state.redirect && this.state.searchEntered) {\n        else if (this.state.redirect && this.state.searchEntered) {\n            // let params = {searchString: this.state.text, isGeo: false };\n            let searchString = { searchString: this.state.text };\n            console.log(`passing to Filter2 - searchString`); // = ${params.searchString}`);\n            return <Filter searchString={searchString} />\n        }\n        else {\n            return (\n                <div>\n                    <div>\n                        {/* <SearchIcon />\n                        <TextField className=\"textBox\"\n                            variant=\"filled\"\n                            id=\"input-with-icon-grid\"\n                            label=\"Search locations\"\n                            style={{ minWidth: 350, maxWidth: 800 }}\n                            onChange={this.handleTextChange}\n                            // onChange={ (event) => setText( event.target.value )}\n                            onKeyDown={ this.handleEnterKeyPress }\n                            value={ this.state.text }\n                        /> */}\n                        <TextField\n                            id=\"search\"\n                            label=\"Search locations\"\n                            placeholder=\"Search locations\"\n                            onChange={this.handleTextChange}\n                            // onChange={ (event) => setText( event.target.value )}\n                            onKeyDown={this.handleEnterKeyPress}\n                            value={this.state.text}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <Button color=\"primary\" startIcon={<GpsFixedTwoToneIcon />} onClick={() => this.handleClick('geolocation')}>\n                            Find Nearest Facility\n                            </Button>\n                    </div>\n                    <div>\n                        <Link to=\"/manage-locations\" style={{ textDecoration: 'none' }}>\n                            <Button color=\"primary\" startIcon={<SettingsTwoToneIcon />} onClick={() => this.handleClick('savedLocations')}>\n                                Manage Saved Locations\n                            </Button>\n                        </Link>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\nexport default Search;","import React from \"react\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport \"../../App.css\";\nimport { useState } from \"react\";\n\nexport default function SwitchesGroup(props) {\n  const [state, setState] = useState({ water: true, toilet: true });\n\n  const handleChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.checked });\n    if (e.target.name === \"water\") {\n      props.filterResults(e.target.checked, state.toilet);\n    } else if (e.target.name === \"toilet\") {\n      props.filterResults(state.water, e.target.checked);\n    }\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel className=\"spl-filterTitle\">Filter Results</FormLabel>\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.water}\n              color=\"primary\"\n              onChange={handleChange}\n              name=\"water\"\n            />\n          }\n          label=\"Water\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.toilet}\n              color=\"primary\"\n              onChange={handleChange}\n              name=\"toilet\"\n            />\n          }\n          label=\"Toilets\"\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SwitchesGroup from \"./SwitchesGroup\";\nimport MapView from \"../MapView\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { locationList } from \"../../store/location/locationSelector\";\nimport { getLocation } from \"../../store/location/locationAction\";\n\nfunction Filter({ searchString }) {\n  const [state, setState] = useState({\n    waterFacilities: [],\n    toiletFacilities: [],\n    water: true,\n    toilet: true,\n  });\n\n  const dispatch = useDispatch();\n  const locationListSelector = useSelector(locationList);\n\n  const getLocationList = useCallback(() => {\n    dispatch(getLocation());\n  }, [dispatch]);\n  useEffect(() => {\n    getLocationList();\n  }, [getLocationList]);\n\n  const waterLocations = locationListSelector.filter(\n    (location) => location.water === true\n  );\n\n  const toiletLocations = locationListSelector.filter(\n    (location) => (location.femaleToilets || location.maleToilets) === true\n  );\n  console.log(\"waterlocations\", waterLocations);\n\n  const filterResults = (water, toilet) => {\n    console.log(\"FilterResults water:\", water);\n    console.log(\"FilterResults toilet:\", toilet);\n    if (!water) {\n      setState({ ...state, waterFacilities: [] });\n      setState({ ...state, water: false });\n    } else if (!toilet) {\n      setState({ ...state, toiletFacilities: [] });\n      setState({ ...state, toilet: false });\n    } else {\n      setState({ ...state, waterFacilities: waterLocations });\n      setState({ ...state, toiletFacilities: toiletLocations });\n      setState({ ...state, water: true });\n      setState({ ...state, toilet: true });\n    }\n  };\n\n  return (\n    <Grid container id=\"container\">\n      <Grid item xs={12} md={12}>\n      <div id=\"geocoder\" className=\"geocoder\"></div>\n        {<MapView searchString={searchString} />}\n      </Grid>\n      <Grid item xs={12} md={12}>\n        <SwitchesGroup filterResults={filterResults} />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction Copyright() {\n    return (\n      <div >\n    <Box mt={8}>\n      <Typography variant=\"body2\" align=\"center\" style={{color: \"rgba(255, 255, 255, 0.54)\"}}>\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"/\" className=\"spl--pb\">\n          Splashpool\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n      </Box>\n      </div>\n    );\n  }\n\n\nexport default Copyright;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return (\n    <Button variant=\"outlined\" color=\"primary\" onClick={() => loginWithRedirect()}>\n      Log In\n    </Button>\n  );\n};\n\nexport default LoginButton;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n  return (\n    <Button variant=\"outlined\" color=\"primary\" onClick={() =>\n      logout({\n        returnTo: window.location.origin,\n      })\n    }>\n    Log Out\n  </Button>\n  );\n};\n\nexport default LogoutButton;","import React from \"react\";\n\nimport LoginButton from \"./LoginButton\";\nimport LogoutButton from \"./LogoutButton\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst AuthenticationButton = () => {\n  const { isAuthenticated } = useAuth0();\n\n  return isAuthenticated ? <LogoutButton /> : <LoginButton />;\n};\n\nexport default AuthenticationButton;","import React from \"react\";\nimport AuthenticationButton from \"./AuthenticationButton\";\n\nconst AuthNav = () => (\n    <AuthenticationButton />\n);\n\nexport default AuthNav;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nconst styles = theme => ({\n    drawerPaper: { width: 'inherit',\n    marginTop: 64,\n    [theme.breakpoints.down('sm')]: {\n        marginTop: 56\n    }\n    },\n    link: {\n      textDecoration: 'none',\n      color: theme.palette.text.primary\n    },\n    gutterBottom: {\n      marginBottom: '1.5rem'\n    }\n  });\n\nclass NavDrawer extends Component {\n    state = {  }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div style={{ display: 'flex' }}>\n          <Drawer\n            style={{ width: '240px' }}\n            varian=\"persistent\"\n            anchor=\"left\"\n            open={this.props.drawerOpened}\n            onClose={this.props.toggleDrawer(false)}\n            classes={{ paper: classes.drawerPaper }}\n          >\n            <List\n                      onClick={this.props.toggleDrawer(false)}\n                      onKeyDown={this.props.toggleDrawer(false)}\n            >\n              <Link to=\"/\" className={classes.link}>\n                <ListItem button>\n                  <ListItemIcon>\n                    <HomeIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={\"Home\"} />\n                </ListItem>\n              </Link>\n              <Link to=\"/manage-locations\" className={classes.link}>\n                <ListItem button>\n                  <ListItemIcon>\n                    <SettingsIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={\"Manage Locations\"} />\n                </ListItem>\n              </Link>\n              <Link to=\"/locations\" className={classes.link}>\n                <ListItem button>\n                  <ListItemIcon>\n                    <SearchIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={\"Search Locations\"} />\n                </ListItem>\n              </Link>\n            </List>\n          </Drawer>\n        </div>\n        );\n    }\n}\n\nexport default withStyles(styles) (NavDrawer);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n//import AccountCircle from '@material-ui/icons/AccountCircle';\nimport AuthNav from \"../AuthNav\";\nimport NavDrawer from './NavDrawer'\n//import MenuItem from '@material-ui/core/MenuItem';\n//import Menu from '@material-ui/core/Menu';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n});\n\n// const [auth, setAuth] = React.useState(true);\n// const [anchorEl, setAnchorEl] = React.useState(null);\n// const open = Boolean(anchorEl);\n\nclass Header extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawerOpened: false\n    };\n  }\n  toggleDrawer = booleanValue => () => {\n    this.setState({\n      drawerOpened: booleanValue\n    });\n  };\n\n  // handleChange = (event) => {\n  //   setAuth(event.target.checked);\n  // };\n\n  // handleMenu = (event) => {\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n\n\n  render() {\n    const { classes } = this.props;\n    return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"transparent\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n          onClick={this.toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          \n       \n          <Typography variant=\"h6\" className={classes.title}>\n            Oasis\n          </Typography>\n            <div>\n            <AuthNav />\n            {/* <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={this.handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={this.handleClose}\n              >\n                <MenuItem onClick={this.handleClose}>Profile</MenuItem>\n                <MenuItem onClick={this.handleClose}>My account</MenuItem>\n              </Menu> */}\n            </div>\n        </Toolbar>\n      </AppBar>\n\n      <NavDrawer\n          drawerOpened={this.state.drawerOpened}\n          toggleDrawer={this.toggleDrawer}\n        />\n      </div>\n  );\n }\n}\nexport default withStyles(styles) (Header);","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { getLocation } from '../store/location/locationAction';\nimport { locationList } from '../store/location/locationSelector';\n\nconst SingleLoaction = ({ match }) => {\n    let { locationId } = match.params;\n    const dispatch = useDispatch();\n    const locationListSelector = useSelector(locationList);\n    let locationData;\n\n    const getLocationList = useCallback(() => {\n        dispatch(getLocation());\n    }, [dispatch]);\n    useEffect(() => {\n        getLocationList();\n    }, [getLocationList]);\n\n    if (locationListSelector) {\n        locationData = locationListSelector.filter((location) => location.locationId === parseInt(locationId))[0];\n    }\n    if (locationData) {\n\n        return (\n            <div>\n                <Grid container spacing={0}>\n                    <Grid item md></Grid>\n                    <Grid item xs={12} md={8}>\n                        <Typography\n                            variant=\"h4\"\n                            component=\"h1\"\n                            gutterBottom\n                            className=\"spl--pb spl--pt\"\n                        >\n                            {locationData.locationName}\n\n                        </Typography>\n                        <img src={locationData.pictureURL} alt={locationData.locationName} className=\"responsive\" />\n                        <Typography variant=\"body1\" gutterBottom className=\"spl--pt\">\n                            {locationData.address1}\n                        </Typography>\n                        <Typography variant=\"body1\" gutterBottom className=\"spl--pb\">\n                            {locationData.postCode}\n                        </Typography>\n                    </Grid>\n                    <Grid item md></Grid>\n                </Grid>\n            </div>\n        )\n    } return (\n        <Grid container spacing={0}>\n            <Grid item md></Grid>\n            <Grid item xs={12} md={8}>\n                <Typography\n                    variant=\"h4\"\n                    component=\"h1\"\n                    gutterBottom\n                    className=\"spl--pb spl--pt\"\n                >\n                    Location not found\n                        </Typography>\n            </Grid>\n            <Grid item md></Grid>\n        </Grid>\n    )\n};\n\nexport default SingleLoaction;\n","import React from \"react\";\nimport image from \"../assets/images/loading.svg\";\nconst style = { position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\" };\n  \n\nconst Loading = () => (\n  <div style={style}>\n      <img src={image} alt=\"Loading...\" />\n  </div>\n);\n\nexport default Loading;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport Loading from \"../components/Loading\";\n\nconst ProtectedRoute = ({ component, ...args }) => (\n  <Route\n    component={withAuthenticationRequired(component, {\n      onRedirecting: () => <Loading />,\n    })}\n    {...args}\n  />\n);\n\nexport default ProtectedRoute;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport countryList from 'react-select-country-list';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { addLocation } from '../store/location/locationAction';\nimport { addLocationLoading } from '../store/location/locationSelector';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        minWidth: 300,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function AddLocation() {\n    const classes = useStyles();\n    const options = countryList().getData();\n\n    const dispatch = useDispatch();\n    const [open, setOpen] = React.useState(false);\n    const [locationName, setLocationName] = useState('');\n    const [address1, setAddress1] = useState('');\n    const [address2, setAddress2] = useState('');\n    const [city, setCity] = useState('');\n    const [postCode, setPostCode] = useState('');\n    const [country, setCountry] = useState('');\n    const addLocationLoadingSelector = useSelector(addLocationLoading);\n\n    const clearState = () => {\n        setLocationName('');\n        setAddress1('');\n        setAddress2('');\n        setCity('');\n        setPostCode('');\n        setCountry('');\n    }\n\n    const handleLocationNameChange = (e) => {\n        setLocationName(e.target.value);\n    }\n    const handleAdress1Change = (e) => {\n        setAddress1(e.target.value);\n    }\n    const handleAdress2Change = (e) => {\n        setAddress2(e.target.value);\n    }\n    const handleCityChange = (e) => {\n        setCity(e.target.value);\n    }\n    const handleCountryChange = (e) => {\n        setCountry(e.target.value);\n    };\n\n    const handlePostCodeChange = (e) => {\n        setPostCode(e.target.value);\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        clearState();\n        setOpen(false);\n    };\n\n    const handleSubmit = async () => {\n        console.log(locationName, address1, address2, city, postCode, country);\n\n        const geoCodingData = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${postCode}&key=${process.env.REACT_APP_GEOCODING_API_KEY}`);\n        const locationData = geoCodingData.data.results[0].geometry.location;\n\n        // const postcodesApiData = await axios.get(`https://api.postcodes.io/postcodes/${postCode}`);\n        // const locationData = postcodesApiData.data.result;\n        try {\n            await dispatch(addLocation({\n                locationName: locationName,\n                address1: address1,\n                address2: address2,\n                city: city,\n                postCode: postCode,\n                country: country,\n                // This works with postcodeApiData\n                // longitude: locationData.longitude,\n                // latitude: locationData.latitude,\n                longitude: locationData.lng,\n                latitude: locationData.lat,\n                adminOrg: \"\",\n                water: false,\n                drinkable: true,\n                treatment: false,\n                unknown: false,\n                largeWaterFacility: false,\n                maleToilets: false,\n                femaleToilets: false,\n                largeToiletFacility: false,\n                disabledAccess: false,\n                chargeForUse: false,\n                openingHours: \"\",\n                hasIssue: false\n            }));\n            setOpen(false);\n            clearState();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <div>\n            <Grid container justify=\"flex-end\" className=\"spl--pb\">\n                <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                    <AddIcon /> Add Location\n                </Button>\n            </Grid>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add Location</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Please enter your location details here.\n                    </DialogContentText>\n                    <form noValidate autoComplete=\"off\">\n                        <TextField\n                            margin=\"dense\"\n                            id=\"locationName\"\n                            label=\"Location Name\"\n                            placeholder=\"Enter location name\"\n                            type=\"text\"\n                            fullWidth\n                            required\n                            value={locationName}\n                            onChange={handleLocationNameChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"address1\"\n                            label=\"Address Line 1\"\n                            type=\"text\"\n                            fullWidth\n                            value={address1}\n                            onChange={handleAdress1Change}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"address2\"\n                            label=\"Address Line 2\"\n                            type=\"text\"\n                            fullWidth\n                            value={address2}\n                            onChange={handleAdress2Change}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"city\"\n                            label=\"City\"\n                            type=\"text\"\n                            fullWidth\n                            required\n                            value={city}\n                            onChange={handleCityChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"postcode\"\n                            label=\"Postcode\"\n                            type=\"text\"\n                            fullWidth\n                            value={postCode}\n                            onChange={handlePostCodeChange}\n                        />\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"country\">Country</InputLabel>\n                            <Select\n                                labelId=\"country\"\n                                id=\"country\"\n                                required\n                                value={country}\n                                onChange={handleCountryChange}\n                            >\n                                {options.map((item) => {\n                                    return (<MenuItem key={item.value} value={item.label}>{item.label}</MenuItem>);\n                                })}\n                            </Select>\n                        </FormControl>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={() => handleSubmit()} color=\"primary\">\n                        Add Location\n                        {addLocationLoadingSelector && <CircularProgress />}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { getLocation, deleteLocation } from '../store/location/locationAction';\nimport { locationList, getLocationLoading, deleteLocationLoading, updateLocationLoading} from '../store/location/locationSelector';\nimport AddLocation from './AddLocation';\n\nexport default function ListLocation() {\n    const dispatch = useDispatch();\n    const locationListSelector = useSelector(locationList);\n    const getLocationLoadingSelector = useSelector(getLocationLoading);\n    const deleteLocationLoadingSelector = useSelector(deleteLocationLoading);\n    const updateLocationLoadingSelector = useSelector(updateLocationLoading);\n    const [deleteLocationId, setDeleteLocationId] = useState(null);\n    const [updateLocationId, setUpdateLocationId] = useState(null);\n\n    const getLocationList = useCallback(() => {\n        dispatch(getLocation());\n    }, [dispatch]);\n    useEffect(() => {\n        getLocationList();\n    }, [getLocationList]);\n\n\n    const removeLocation = (location) => {\n        setDeleteLocationId(location.locationId);\n        dispatch(deleteLocation(location.locationId));\n    }\n\n    const updateLocationStatus = (location) => {\n        setUpdateLocationId(location.locationId);\n        dispatch(updateLocationStatus({\n            ...location\n        }))\n    }\n    // var search = document.getElementById(\"geocoder\");\n    // // remove search from nav  bar\n    // if (search != null && search.childNodes[0]) {\n\n    //     search.removeChild(search.childNodes[0]);\n    // }\n\n    return (\n        <div>\n            <Grid container spacing={0}>\n                <Grid item md></Grid>\n                <Grid item xs={12} md={6}>\n                    <Typography\n                        variant=\"h5\"\n                        component=\"h1\"\n                        gutterBottom\n                        className=\"spl--pb spl--pt\"\n                    >\n                        Manage Locations\n                    </Typography>\n                    {!getLocationLoadingSelector && (locationListSelector.length === 0) &&\n                        <Typography variant=\"body1\" gutterBottom className=\"spl--pb\">\n                            Locations list empty.\n                    </Typography>\n                    }\n                    {getLocationLoadingSelector && <LinearProgress />}\n                    <AddLocation />\n                    <div>\n                        <List>\n                            {locationListSelector.map((location, index) => (\n                                <ListItem key={index}>\n                                    <ListItemText primary={location.locationName} />\n                                    <Link to={`/location/${location.locationId}`}>\n                                        <Button variant=\"outlined\" color=\"primary\" aria-label=\"display\">\n                                            <FontAwesomeIcon icon=\"eye\" />\n                                        </Button>\n                                    </Link>\n                                    <Button variant=\"contained\" color=\"primary\" style={{ marginLeft: '0.5rem' }} aria-label=\"update\" onClick={() => updateLocationStatus(location)}>\n                                        <FontAwesomeIcon icon=\"pen\" />\n                                        {updateLocationLoadingSelector && (location.locationId === updateLocationId) && <CircularProgress color=\"secondary\" />}\n                                    </Button>\n                                    <Button variant=\"outlined\" color=\"secondary\" style={{ marginLeft: '0.5rem' }} aria-label=\"delete\" onClick={() => removeLocation(location)}>\n                                        <FontAwesomeIcon icon=\"trash-alt\" />\n                                        {deleteLocationLoadingSelector && (location.locationId === deleteLocationId) && <CircularProgress color=\"secondary\" />}\n                                    </Button>\n                                </ListItem>\n                            ))}\n                        </List>\n                    </div>\n                </Grid>\n                <Grid item md></Grid>\n            </Grid>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport Profile from \"./components/Profile\";\nimport LocationDetails from \"./components/LocationDetails\";\nimport \"fontsource-montserrat\";\nimport Search from \"./components/Search/Search.jsx\";\nimport Filters from \"./components/Filters/Filters\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faHandHoldingWater,\n  faTrash,\n  faTrashAlt,\n  faPen,\n  faEye,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Copyright from \"./components/Copyright\";\nimport Header from \"./components/Header/Header\";\nimport SingleLocation from \"./components/SingleLocation\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Loading from \"./components/Loading\";\nimport ProtectedRoute from \"./auth/protected-route\";\n//import axios from \"axios\";\nimport ManageLocations from \"./components/ManageLocations\";\nimport MapView from './components/MapView';\nimport Popup from './components/MapView/Popup'\n\nlibrary.add(fab, faHandHoldingWater, faTrash, faTrashAlt, faPen, faEye);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1FB0F5\",\n    },\n  },\n  typography: {\n    fontFamily: [\n      '\"Montserrat\"',\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n});\n\nconst App = () => {\n  const { isLoading } = useAuth0();\n\n  // useEffect(() => {\n  //   axios.get('https://j33niy2o35.execute-api.eu-west-2.amazonaws.com/dev/locations', { crossdomain: true }\n  //   )\n  //   .then((response) => {\n  //     console.log(response);\n  //   }, (error) => {\n  //     console.log(error);\n  //   }, []\n  //   )\n  // });\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  // const [locations, setlocation] = useState([\n  //   {\n  //     id: 1,\n  //     name: \"london\",\n  //     longitude: \"51.5074\",\n  //     latitude: \" 0.1278\",\n  //     status: \"Drinkable\",\n  //   },\n  //   {\n  //     id: 2,\n  //     name: \"Santiago\",\n  //     longitude: \"54.5074\",\n  //     latitude: \" 7.1278\",\n  //     status: \"Need traitment\",\n  //   },\n  //   {\n  //     id: 3,\n  //     name: \"Santiago\",\n  //     longitude: \"94.5074\",\n  //     latitude: \" 7.1278\",\n  //     status: \"Drinkable\",\n  //   },\n  //   {\n  //     id: 4,\n  //     name: \"Santiago\",\n  //     longitude: \"04.5074\",\n  //     latitude: \" 7.1278\",\n  //     status: \"Uknown\",\n  //   },\n  // ]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <StylesProvider injectFirst>\n        <Router>\n          <Header />\n          <Container maxWidth=\"md\">\n            <Switch>\n              <Route path=\"/locations\">\n                <Filters />\n              </Route>\n              <Route path=\"/search\" component={Search} />\n              <Route path=\"/map-view\" component={MapView} />\n              <Route path=\"/popup\" component={Popup} />\n              <Route path=\"/manage-locations\" component={ManageLocations} />\n              <Route path=\"/location/:locationId\" component={SingleLocation} />\n              <ProtectedRoute path=\"/profile\" component={Profile} />\n              <Route\n                path=\"/location-details/:number\"\n                component={LocationDetails}\n              />\n              <Route path=\"/\" exact={true} component={Home} />\n            </Switch>\n          </Container>\n          <Copyright />\n        </Router>\n      </StylesProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as userActionType from './userActionType';\n\nconst initialUserState = {\n    userList: []\n}\n\nconst userReducer = (state = initialUserState, { type, payload }) => {\n    switch (type) {\n        case userActionType.GET_USER:\n            return {\n                ...state,\n                userList: payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default userReducer;","export const GET_USER = 'GET_USER';\nexport const GET_USER_BEGINS = 'GET_USER_BEGINS';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILURE = 'GET_USER_FAILURE';","import * as locationActionType from './locationActionType';\n\nconst initialLocationState = {\n    locationList: [],\n    getLocationLoading: false,\n    addLocationLoading: false,\n    deleteLocationLoading: false,\n    updateLocationLoading: false\n}\n\nconst locationReducer = (state = initialLocationState, { type, payload }) => {\n    switch (type) {\n        case locationActionType.GET_LOCATION_BEGINS:\n            return {\n                ...state,\n                getLocationLoading: true\n            }\n        case locationActionType.GET_LOCATION_SUCCESS:\n            return {\n                ...state,\n                locationList: payload,\n                getLocationLoading: false\n            }\n        case locationActionType.GET_LOCATION_FAILURE:\n            return {\n                ...state,\n                getLocationLoading: false\n            }\n        case locationActionType.ADD_LOCATION_BEGINS:\n            return {\n                ...state,\n                addLocationLoading: true\n            }\n        case locationActionType.ADD_LOCATION_SUCCESS:\n            return {\n                ...state,\n                locationList: [...state.locationList, payload],\n                addLocationLoading: false\n            }\n        case locationActionType.ADD_LOCATION_FAILURE:\n            return {\n                ...state,\n                addLocationLoading: false\n            }\n        case locationActionType.DELETE_LOCATION_BEGINS:\n            return {\n                ...state,\n                deleteLocationLoading: true\n            }\n        case locationActionType.DELETE_LOCATION_SUCCESS:\n            return {\n                ...state,\n                locationList: state.locationList.filter(location => location.locationId !== payload),\n                deleteLocationLoading: false\n            }\n        case locationActionType.DELETE_LOCATION_FAILURE:\n            return {\n                ...state,\n                deleteLocationLoading: false\n            }\n        case locationActionType.UPDATE_LOCATION_BEGINS:\n            return {\n                ...state,\n                updateLocationLoading: true\n            }\n        case locationActionType.UPDATE_LOCATION_SUCCESS:\n            return {\n                ...state,\n                locationList: state.locationList.map(location => (location.locationId === payload.locationId) ? payload : location),\n                updateLocationLoading: false\n            }\n        case locationActionType.UPDATE_LOCATION_FAILURE:\n            return {\n                ...state,\n                updateLocationLoading: false\n            }\n        default:\n            return state\n    }\n}\n\nexport default locationReducer;","import { combineReducers } from 'redux';\nimport userReducer from './user/userReducer';\nimport locationReducer from './location/locationReducer';\n\nconst reducer = combineReducers({\n    user: userReducer,\n    location: locationReducer\n})\n\nexport default reducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogger } from 'redux-logger';\n\nimport reducer from './rootReducer';\n\nconst logger = createLogger({\n    collapsed: true\n  });\n\nconst store = createStore(reducer, undefined, composeWithDevTools(applyMiddleware(thunk, logger)));\n\nexport default store;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n  const history = useHistory();\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\n\n  const onRedirectCallback = (appState) => {\n    history.push(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n      audience={audience}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Auth0ProviderWithHistory from \"./auth/auth0-provider-with-history\";\n\ntoast.configure({\n  autoClose: 1500\n})\n\nReactDOM.render(\n  <Router>\n    <Auth0ProviderWithHistory>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Auth0ProviderWithHistory>\n  </Router>,\n  document.getElementById('root')\n);\nserviceWorker.register();"],"sourceRoot":""}