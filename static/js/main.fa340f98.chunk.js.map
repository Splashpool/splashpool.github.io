{"version":3,"sources":["assets/images/loading.svg","components/Home/Home.js","components/Profile.js","components/LocationDetails.js","components/Search/Search.jsx","components/Filters/SwitchesGroup.js","components/MapView/fetchFakeData.js","components/MapView/Popup.js","components/MapView.js","store/location/locationSelector.js","config/api.js","store/location/locationAction.js","store/location/locationActionType.js","components/Filters/Filters.js","components/Copyright.jsx","components/LoginButton.js","components/LogoutButton.js","components/AuthenticationButton.js","components/AuthNav.js","components/Header/NavDrawer.js","components/Header/Header.js","components/Loading.js","auth/protected-route.js","components/AddLocation.js","components/ManageLocations.js","App.js","serviceWorker.js","store/user/userReducer.js","store/user/userActionType.js","store/location/locationReducer.js","store/rootReducer.js","store/index.js","auth/auth0-provider-with-history.js","index.js"],"names":["module","exports","Header","search","document","getElementById","removeChild","childNodes","className","style","padding","Grid","container","spacing","item","md","xs","icon","Typography","variant","component","gutterBottom","to","textDecoration","Button","color","Profile","user","useAuth0","name","picture","email","sub","src","alt","JSON","stringify","LocationDetails","features","data","properties","console","log","match","params","id","description","status","stars","Card","CardActionArea","CardContent","value","max","onChange","FormControl","RadioGroup","aria-label","event","FormControlLabel","control","Radio","label","Divider","CardActions","size","disableElevation","Search","props","handleTextChange","setState","text","target","state","geoClicked","saveLocsClicked","searchEntered","buttonText","this","toString","redirect","keyCode","searchStr","searchString","TextField","placeholder","onKeyDown","handleEnterKeyPress","InputProps","startAdornment","InputAdornment","position","startIcon","onClick","handleClick","Component","SwitchesGroup","useState","water","toilet","handleChange","e","checked","filterResults","FormLabel","FormGroup","Switch","getRandomCoordinate","centerLon","longitude","centerLat","latitude","r","Math","sqrt","random","theta","PI","cos","sin","fetchFakeData","centerCoordinates","newFeaturesList","i","push","type","geometry","coordinates","WC","Water","Promise","resolve","Popup","feature","key","ReactDOM","render","querySelector","require","mapboxgl","accessToken","MapView","mapContainerRef","useRef","popUpRef","offset","geolocate","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","useEffect","map","Map","current","center","zoom","addControl","NavigationControl","on","coords","geocoder","MapboxGeocoder","appendChild","onAdd","addSource","addLayer","source","layout","a","getCenter","lng","lat","results","getSource","setData","length","getCanvas","cursor","popupNode","createElement","setLngLat","setDOMContent","addTo","remove","ref","locationList","location","getLocationLoading","addLocationLoading","deleteLocationLoading","updateLocationLoading","getLocation","dispatch","axios","get","apiConfig","result","payload","toast","error","message","addLocation","locationData","post","success","Filter","waterFacilities","toiletFacilities","useDispatch","locationListSelector","useSelector","getLocationList","useCallback","waterLocations","filter","toiletLocations","femaleToilets","maleToilets","Copyright","Box","mt","align","Link","href","Date","getFullYear","LoginButton","loginWithRedirect","LogoutButton","logout","returnTo","window","origin","AuthenticationButton","isAuthenticated","AuthNav","NavDrawer","classes","display","Drawer","width","varian","anchor","open","drawerOpened","onClose","toggleDrawer","paper","drawerPaper","List","link","ListItem","button","ListItemIcon","ListItemText","primary","withStyles","theme","marginTop","breakpoints","down","palette","marginBottom","booleanValue","root","AppBar","Toolbar","IconButton","edge","menuButton","title","React","flexGrow","marginRight","top","left","transform","Loading","image","ProtectedRoute","args","withAuthenticationRequired","onRedirecting","useStyles","makeStyles","formControl","minWidth","selectEmpty","AddLocation","options","countryList","getData","setOpen","locationName","setLocationName","address1","setAddress1","address2","setAddress2","city","setCity","postCode","setPostCode","country","setCountry","addLocationLoadingSelector","clearState","handleClose","handleSubmit","process","geoCodingData","adminOrg","drinkable","treatment","unknown","largeWaterFacility","largeToiletFacility","disabledAccess","chargeForUse","openingHours","hasIssue","justify","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","noValidate","autoComplete","margin","fullWidth","required","InputLabel","Select","labelId","MenuItem","DialogActions","CircularProgress","ListLocation","getLocationLoadingSelector","deleteLocationLoadingSelector","updateLocationLoadingSelector","deleteLocationId","setDeleteLocationId","updateLocationId","setUpdateLocationId","removeLocation","locationId","delete","LinearProgress","updateLocationStatus","marginLeft","library","add","fab","faHandHoldingWater","faTrash","faTrashAlt","faPen","faEye","createMuiTheme","main","typography","fontFamily","join","App","isLoading","ThemeProvider","StylesProvider","injectFirst","Container","maxWidth","path","Filters","ManageLocations","exact","Home","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","initialUserState","userList","userReducer","initialLocationState","locationReducer","reducer","combineReducers","logger","createLogger","collapsed","store","createStore","undefined","composeWithDevTools","applyMiddleware","thunk","Auth0ProviderWithHistory","children","history","useHistory","domain","clientId","redirectUri","onRedirectCallback","appState","pathname","audience","configure","autoClose","URL","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fa340f98.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.2dc69883.svg\";","import React from \"react\";\nimport { Link} from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport \"./Home.css\";\n\nfunction Header() {\n  var search = document.getElementById(\"geocoder\");\n  // remove search from nav  bar\n  if (search) {\n    search.removeChild(search.childNodes[0]);\n  }\n\n  return (\n    <div className=\"Header\" style={{ padding: 20 }}>\n      <Grid container spacing={0}>\n        <Grid item md></Grid>\n        <Grid item xs={12} md={6}>\n          <FontAwesomeIcon icon=\"hand-holding-water\" className=\"spl--pb\" />\n\n          <Typography\n            variant=\"h2\"\n            component=\"h1\"\n            gutterBottom\n            className=\"spl--pb\"\n          >\n            Welcome to Oasis\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom className=\"spl--pb\">\n            Find for your nearest drinking water and toilet facilities\n          </Typography>\n          <Link to=\"/search\" style={{ textDecoration: 'none' }}>\n            <Button variant=\"contained\" color=\"primary\" >\n              Search locations\n            </Button>\n          </Link>\n\n        </Grid>\n        <Grid item md></Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Header;\n","// src/views/profile.js\n\nimport React from \"react\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Profile = () => {\n  const { user } = useAuth0();\n  const { name, picture, email, sub } = user;\n\n  return (\n    <div>\n      <div className=\"row align-items-center profile-header\">\n        <div className=\"col-md-2 mb-3\">\n          <img\n            src={picture}\n            alt=\"Profile\"\n            className=\"rounded-circle img-fluid profile-picture mb-3 mb-md-0\"\n          />\n        </div>\n        <div className=\"col-md text-center text-md-left\">\n          <h2>{name}</h2>\n          <p>User id: {sub}</p>\n          <p className=\"lead text-muted\">{email}</p>\n        </div>\n      </div>\n      <div className=\"row\">\n        <pre className=\"col-12 text-light bg-dark p-4\">\n          {JSON.stringify(user, null, 2)}\n        </pre>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","//import React, { Component } from 'react';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Rating from 'material-ui-rating';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n//import CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n\n\n\n\n// ES5\n\n\n\n\n\n\nfunction LocationDetails(features) {\n    var data ={};\n   // console.log(features.features);\n    if (features.features) {\n     data  = features.features.properties;\n    } else {\n        console.log('dataaaaa',features.match.params);\n        data = { id: 1, name: 'name', description: 'descriptionn', status: 'unkown', stars: 2 };\n    }\n    // const [value, setValue] = React.useState('drinkable');\n    //   console.log('features kkkkkkk',features.features.properties);\n    const handleChange = (event) => {\n        // setValue(event.target.value);\n    };\n\n    //  console.log(features);\n\n    var search = document.getElementById(\"geocoder\");\n    // remove search from nav  bar\n    if (search) {\n        search.removeChild(search.childNodes[0]);\n    }\n    return (\n\n        <Grid container spacing={0}>\n            <Grid item xs={12}>\n\n                {/* to get this line working you need to install -> npm install material-ui-rating\n                 and  npm install @material-ui/icons */}\n\n\n                <Card className=\"spl-root\">\n                    <CardActionArea>\n                        <img\n                            className=\"spl-media\"\n                            src=\"https://images.freeimages.com/images/large-previews/113/water-from-spring-1426253.jpg\"\n                            alt=\"Contemplative Reptile\"\n                        />\n                        <CardContent>\n                            <Typography variant=\"h5\">Rating</Typography>\n\n                            <Rating\n                                value={data.stars}\n                                max={5}\n                                onChange={(value) => console.log(`Rated with value ${value}`)}\n                            />\n                            <FormControl component=\"fieldset\">\n\n                                <RadioGroup aria-label=\"gender\" name=\"water\" value={data.status} onChange={handleChange} className=\"spl-radio\">\n\n                                    <FormControlLabel value=\"drinkable\" control={<Radio color=\"primary\" />} label=\"Drinkable\" />\n                                    <Divider />\n                                    <FormControlLabel value=\"treatment\" control={<Radio color=\"primary\" />} label=\"Need treatment\" />\n                                    <Divider />\n                                    <FormControlLabel value=\"undrinkable\" control={<Radio color=\"primary\" />} label=\"Undrinkable\" />\n                                    <Divider />\n                                    <FormControlLabel value=\"unkown\" control={<Radio color=\"primary\" />} label=\"Unkown\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </CardContent>\n                    </CardActionArea>\n                    <CardActions>\n                        <Button size=\"small\" color=\"primary\">\n                            Report a problem\n                        </Button>\n                        <Button size=\"small\" variant=\"contained\" color=\"primary\" disableElevation>\n                            Notify me\n                        </Button>\n                    </CardActions>\n                </Card>\n\n\n\n            </Grid>\n\n\n        </Grid>\n\n    );\n}\n\nexport default LocationDetails;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport GpsFixedTwoToneIcon from '@material-ui/icons/GpsFixedTwoTone';\nimport SettingsTwoToneIcon from '@material-ui/icons/SettingsTwoTone';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n// import Login from '../Login/Login.jsx';\n// import LocationListing from '../LocationListing.js';\n\n// import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//     Link,\n//     useRouteMatch,\n//     useParams,\n//   } from \"react-router-dom\";\n\n// import { Redirect } from 'react-router';\n// import { Home, LocationSearching } from '@material-ui/icons';\n//import MapView from '../MapView';\nimport Filter from '../Filter';\n\nclass Search extends Component {\n    //state = { text:'', geoClicked: false, saveLocsClicked: false, searchEntered: false }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: '',\n            geoClicked: false,\n            saveLocsClicked: false,\n            searchEntered: false\n        }\n    }\n\n    // search() {\n    //     console.log('this.state', this.state);\n    // }\n\n    handleClick(buttonText) {\n        console.log(`${buttonText} Clicked`);\n        if (buttonText === 'geolocation') {\n            console.log(`${buttonText} Clicked2`);\n            // this.setState({ geoClicked: true });\n            //this.state.geoClicked = true;\n            this.setState({ geoClicked: true });\n        }\n        else // can only be gelocation or savedLocations button clicked.\n        {\n            console.log(`${buttonText} Clicked3`);\n            //this.state.saveLocsClicked = true;\n            this.setState({ saveLocsClicked: true });\n        }\n        console.log(this.state.geoClicked.toString());\n        console.log(this.state.saveLocsClicked.toString());\n        console.log(this.state.searchEntered.toString());\n        this.setState({ redirect: true });\n    }\n\n    handleEnterKeyPress(event) {\n        if (event.keyCode === 13) {\n            let searchStr = event.target.value;\n            console.log(`${searchStr}<ENTER>`);\n            // console.log(`${event.target.value}<ENTER>`);\n\n            // return (<LocationListing /> )\n\n            this.setState({ searchEntered: true })\n            //    this.state.searchEntered = true;\n\n            // console.log(this.state.geoClicked.toString());\n            // console.log(this.state.saveLocsClicked.toString());\n            // console.log(this.state.searchEntered.toString());\n            //            this.setState({redirect: true});\n\n            event.target.value = '';  // potentially have to place this elsewhere\n        }\n    }\n\n    handleTextChange = (event) => {\n        this.setState({ text: event.target.value });\n    }\n\n    render() {\n        if (this.state.redirect && this.state.geoClicked) {\n            // let params = { searchString: '', isGeo: true}\n            // let params = { searchString: 'geolocation'}\n            let searchString = 'geolocation';\n            console.log(`passing to Filter1 - ${searchString}`)\n            return <Filter searchString={searchString} />\n        }\n        else if (this.state.redirect && this.state.saveLocsClicked) {\n            console.log('Into Managed Saved Locations');\n            // return <ManageSavedLocations />\n        }\n        //        else if ( this.state.redirect && this.state.searchEntered) {\n        else if (this.state.redirect && this.state.searchEntered) {\n            // let params = {searchString: this.state.text, isGeo: false };\n            let searchString = { searchString: this.state.text };\n            console.log(`passing to Filter2 - searchString`); // = ${params.searchString}`);\n            return <Filter searchString={searchString} />\n        }\n        else {\n            return (\n                <div>\n                    <div>\n                        {/* <SearchIcon />\n                        <TextField className=\"textBox\"\n                            variant=\"filled\"\n                            id=\"input-with-icon-grid\"\n                            label=\"Search locations\"\n                            style={{ minWidth: 350, maxWidth: 800 }}\n                            onChange={this.handleTextChange}\n                            // onChange={ (event) => setText( event.target.value )}\n                            onKeyDown={ this.handleEnterKeyPress }\n                            value={ this.state.text }\n                        /> */}\n                        <TextField\n                            id=\"search\"\n                            label=\"Search locations\"\n                            placeholder=\"Search locations\"\n                            onChange={this.handleTextChange}\n                            // onChange={ (event) => setText( event.target.value )}\n                            onKeyDown={this.handleEnterKeyPress}\n                            value={this.state.text}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <Button color=\"primary\" startIcon={<GpsFixedTwoToneIcon />} onClick={() => this.handleClick('geolocation')}>\n                            Find Nearest Facility\n                            </Button>\n                    </div>\n                    <div>\n                        <Link to=\"/manage-locations\" style={{ textDecoration: 'none' }}>\n                            <Button color=\"primary\" startIcon={<SettingsTwoToneIcon />} onClick={() => this.handleClick('savedLocations')}>\n                                Manage Saved Locations\n                            </Button>\n                        </Link>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\nexport default Search;","import React from \"react\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport \"../../App.css\";\nimport { useState } from \"react\";\n\nexport default function SwitchesGroup(props) {\n  const [state, setState] = useState({ water: true, toilet: true });\n\n  const handleChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.checked });\n    if (e.target.name === \"water\") {\n      props.filterResults(e.target.checked, state.toilet);\n    } else if (e.target.name === \"toilet\") {\n      props.filterResults(state.water, e.target.checked);\n    }\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel className=\"spl-filterTitle\">Filter Results</FormLabel>\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.water}\n              color=\"primary\"\n              onChange={handleChange}\n              name=\"water\"\n            />\n          }\n          label=\"Water\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.toilet}\n              color=\"primary\"\n              onChange={handleChange}\n              name=\"toilet\"\n            />\n          }\n          label=\"Toilets\"\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n","\n\nfunction fetchFakeData(centerCoordinates) {\n    const newFeaturesList = [];\n    for (let i = 0; i < 20; i++) {\n        const id = i;\n        const { longitude, latitude } = getRandomCoordinate(centerCoordinates);\n        newFeaturesList.push({\n            type: 'Feature',\n            geometry: {\n                type: 'Point',\n                coordinates: [longitude, latitude],\n            },\n            properties: {\n                id,\n                name: `Random Point #${id}`,\n                description: `description for Random Point #${id}`,\n                WC: true,\n                Water: true,\n                stars: 4,\n                status: 'drinkable'\n            },\n        });\n    }\n    return Promise.resolve({\n        type: 'FeatureCollection',\n        features: newFeaturesList,\n    });\n};\n\n/**\n * Generates a random point within 0.025 radius of map center coordinates.\n * @param {CoordinatePair} centerCoordinates - the {@link CoordinatePair} for the map center\n * @return {CoordinatePair} randomly generated coordinate pair\n */\nconst getRandomCoordinate = ({ longitude: centerLon, latitude: centerLat }) => {\n    const r = 0.025 * Math.sqrt(Math.random());\n    const theta = Math.random() * 2 * Math.PI;\n    const latitude = centerLat + r * Math.cos(theta);\n    const longitude = centerLon + r * Math.sin(theta);\n    return { longitude, latitude };\n};\n\nexport default fetchFakeData;","import React from 'react';\n// import React, { Component } from 'react';\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport Rating from 'material-ui-rating';\nimport Typography from '@material-ui/core/Typography';\n// import Divider from '@material-ui/core/Divider';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormControl from '@material-ui/core/FormControl';\n// import Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import Button from '@material-ui/core/Button';\n// import { Redirect, Link,BrowserRouter } from 'react-router-dom';\nimport ReactDOM from \"react-dom\"\n// import { render } from '@testing-library/react';\nimport LocationDetails from './../LocationDetails'\nconst Popup = ({ feature }) => {\n    //onst { id, name, description, status, stars } = feature.properties;\n    const { id, status, stars } = feature.properties;\n\n    //const [value, setValue] = React.useState(status);\n\n    // const handleChange = (event) => {\n    //     setValue(event.target.value);\n    // };\n    function Detailpage() {\n        \n        ReactDOM.render(\n           \n            <LocationDetails  features={feature} />, document.querySelector(\"#container\")\n\n\n\n        );\n        // //console.log(feature.properties);\n\n        //return <Redirect to='/location-details/1' />\n\n    }\n    return (\n        // <div id={`popup-${id}`} className=\"popupdiv\">\n        //     <h3>{name}</h3>\n        //     {description}\n        // </div>\n\n        <Grid container spacing={0} className=\"popupdiv\">\n            <Grid item xs={12}>\n                <Typography>{status}</Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Rating\n                    value={stars}\n                    max={5}\n                    onChange={(value) => console.log(`Rated with value ${value}`)}\n                    className=\"spl-star\"\n                />\n            </Grid>\n            <Grid item xs={12}>\n                {/* <Button color=\"primary\" onClick={Detailpage}>\n                    Details\n            </Button> */}\n             <BrowserRouter>\n                <ul>\n                    <li key={id}>\n                        <Link to={`/location-details/${id}`} onClick={Detailpage}>Details</Link>\n                    </li>\n                </ul>\n                </BrowserRouter>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Popup;","import React, { useRef, useEffect } from \"react\";\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\nimport fetchFakeData from './MapView/fetchFakeData';\n//import Marker from './MapView/Marker'; unused marker\nimport Popup from './MapView/Popup';\n\n// for using maps you need to install ->  npm install mapbox-gl --save\n// install for search feild -> npm install --save @mapbox/mapbox-gl-geocoder\n//install readdom -> npm install react react-dom\n\nvar ReactDOM = require('react-dom');\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2FuYWVzcGxhc2giLCJhIjoiY2tmYTlwMWpmMHR0cDJ0cHAyOHZhd3V0MSJ9.PmRGRrM4p1wgKavJKm-56A'\n\n\nconst MapView = ({ searchString }) => {\n  console.log(`${searchString} was given to MapView`);\n  const mapContainerRef = useRef(null);\n  const popUpRef = useRef(new mapboxgl.Popup({ offset: [20, 0] }));\n  const geolocate = new mapboxgl.GeolocateControl({\n    positionOptions: {\n      enableHighAccuracy: true\n    },\n    trackUserLocation: true\n  });\n  // initialize map when component mounts\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      // See style options here: https://docs.mapbox.com/api/maps/#styles\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [-1.9876, 51.7405],\n      zoom: 12.5,\n    });\n\n    // add navigation control (the +/- zoom buttons) and geolocate user\n    map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n    map.addControl(geolocate.on('geolocate', function (e) {\n      var lon = e.coords.longitude;\n      var lat = e.coords.latitude;\n      var position = [lon, lat];\n      console.log(position);\n\n    })\n    );\n    // map's search feild\n    // map.addControl(\n    //   new MapboxGeocoder({\n    //     accessToken: mapboxgl.accessToken,\n    //     mapboxgl: mapboxgl\n    //   })\n    // );\n    var geocoder = new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken,\n      mapboxgl: mapboxgl\n    });\n\n    var search = document.getElementById(\"geocoder\");   // test if element exist \n    if (!search.childNodes[0]){\n    document.getElementById('geocoder').appendChild(geocoder.onAdd(map));\n    }\n    map.on(\"load\", () => {\n      // add the data source for new a feature collection with no features\n      // geolocate.trigger(); -> use when the search button is triggered \n      map.addSource(\"random-points-data\", {\n        type: \"geojson\",\n        data: {\n          type: \"FeatureCollection\",\n          features: []\n        }\n      });\n      // now add the layer, and reference the data source above by name\n      map.addLayer({\n        id: \"random-points-layer\",\n        source: \"random-points-data\",\n        type: \"symbol\",\n        layout: {\n          // full list of icons here: https://labs.mapbox.com/maki-icons\n          \"icon-image\": \"drinking-water-15\",\n          \"icon-padding\": 0,\n          'icon-size': 1.5,\n          \"icon-allow-overlap\": true\n        }\n      });\n\n    });\n\n    map.on(\"moveend\", async () => {\n      // get new center coordinates\n      const { lng, lat } = map.getCenter();\n      // fetch new data\n      const results = await fetchFakeData({ longitude: lng, latitude: lat });\n      // update \"random-points-data\" source with new data\n      // all layers that consume the \"random-points-data\" data source will be updated automatically\n      map.getSource(\"random-points-data\").setData(results);\n    });\n\n    // change cursor to pointer when user hovers over a clickable feature\n    map.on(\"mouseenter\", \"random-points-layer\", e => {\n      if (e.features.length) {\n        map.getCanvas().style.cursor = \"pointer\";\n      }\n    });\n\n    // reset cursor to default when user is no longer hovering over a clickable feature\n    map.on(\"mouseleave\", \"random-points-layer\", () => {\n      map.getCanvas().style.cursor = \"\";\n    });\n\n    // add popup when user clicks a point\n    map.on(\"click\", \"random-points-layer\", e => {\n      if (e.features.length) {\n        const feature = e.features[0];\n        // create popup node\n        const popupNode = document.createElement(\"div\");\n        ReactDOM.render(<Popup feature={feature} />, popupNode);\n        // set popup on map\n        popUpRef.current\n          .setLngLat(feature.geometry.coordinates)\n          .setDOMContent(popupNode)\n          .addTo(map);\n      }\n    });\n\n    // map.on('moveend', async () => {\n    //   // get center coordinates\n    //   const { lng, lat } = map.getCenter();\n    //   // fetch new data\n    //   const results = await fetchFakeData({ longitude: lng, latitude: lat });\n    //   // iterate through the feature collection and append marker to the map for each feature\n    //   results.features.forEach(result => {\n    //     const { id, geometry } = result;\n    //     // create marker node\n    //     const markerNode = document.createElement('div');\n    //     ReactDOM.render(<Marker id={id} />, markerNode);\n    //     // add marker to map\n    //     new mapboxgl.Marker(markerNode)\n    //       .setLngLat(geometry.coordinates)\n    //       .addTo(map);\n    //   });\n    // });\n\n    // clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return <div className=\"map-container\" ref={mapContainerRef} />;\n};\n\nexport default MapView;","export const locationList = (state) => state.location.locationList;\nexport const getLocationLoading = (state) => state.location.getLocationLoading;\nexport const addLocationLoading = (state) => state.location.addLocationLoading;\nexport const deleteLocationLoading = (state) => state.location.deleteLocationLoading;\nexport const updateLocationLoading = (state) => state.location.updateLocationLoading;","export default {\n    //API_BASE_URL: 'http://localhost:3001'\n    API_BASE_URL: 'https://j33niy2o35.execute-api.eu-west-2.amazonaws.com/dev/'\n}","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nimport apiConfig from '../../config/api';\nimport * as locationActionType from './locationActionType';\n\nexport const getLocation = () => async (dispatch) => {\n    try {\n        dispatch({ type: locationActionType.GET_LOCATION_BEGINS });\n        const result = await axios.get(`${apiConfig.API_BASE_URL}/locations`);\n        dispatch({\n            type: locationActionType.GET_LOCATION_SUCCESS,\n            payload: result.data\n        });\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: locationActionType.GET_LOCATION_FAILURE });\n        toast.error(error.message);\n    }\n}\n\nexport const addLocation = (locationData) => async (dispatch) => {\n    try {\n        dispatch({ type: locationActionType.ADD_LOCATION_BEGINS });\n        const result = await axios.post(`${apiConfig.API_BASE_URL}/locations`, locationData);\n            dispatch({\n                type: locationActionType.ADD_LOCATION_SUCCESS,\n                payload: result.data\n            });\n            dispatch(getLocation());\n            toast.success('Location Added Successfully!');\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: locationActionType.ADD_LOCATION_FAILURE });\n        toast.error(error.message);\n        throw error;\n    }\n}\n\nexport const deleteLocation = (locationId) => async (dispatch) => {\n    try {\n        dispatch({ type: locationActionType.DELETE_LOCATION_BEGINS });\n        await axios.delete(`${apiConfig.API_BASE_URL}/locations?locationId=${locationId}`);\n            dispatch({\n                type: locationActionType.DELETE_LOCATION_SUCCESS,\n                payload: locationId\n            });\n            toast.success('Location Deleted Successfully!');\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: locationActionType.DELETE_LOCATION_FAILURE });\n        toast.error(error.message);\n        throw error;\n    }\n}\n\nexport const updateLocationStatus = (locationData) => async (dispatch) => {\n    try {\n        dispatch({ type: locationActionType.UPDATE_LOCATION_BEGINS });\n        const result = await axios.put(`${apiConfig.API_BASE_URL}/locations?locationId=${locationData.locationId}`, locationData);\n            dispatch({\n                type: locationActionType.UPDATE_LOCATION_SUCCESS,\n                payload: result.data\n            });\n            toast.success('Location Updated Successfully!');\n    } catch (error) {\n        console.log(error);\n        dispatch({ type: locationActionType.UPDATE_LOCATION_FAILURE });\n        toast.error(error.message);\n        throw error;\n    }\n}","export const GET_LOCATION_BEGINS = 'GET_LOCATION_BEGINS';\nexport const GET_LOCATION_SUCCESS = 'GET_LOCATION_SUCCESS';\nexport const GET_LOCATION_FAILURE = 'GET_LOCATION_FAILURE';\n\nexport const ADD_LOCATION_BEGINS = 'ADD_LOCATION_BEGINS';\nexport const ADD_LOCATION_SUCCESS = 'ADD_LOCATION_SUCCESS';\nexport const ADD_LOCATION_FAILURE = 'ADD_LOCATION_FAILURE';\n\nexport const DELETE_LOCATION_BEGINS = 'DELETE_LOCATION_BEGINS';\nexport const DELETE_LOCATION_SUCCESS = 'DELETE_LOCATION_SUCCESS';\nexport const DELETE_LOCATION_FAILURE = 'DELETE_LOCATION_FAILURE';\n\nexport const UPDATE_LOCATION_BEGINS = 'UPDATE_LOCATION_BEGINS';\nexport const UPDATE_LOCATION_SUCCESS = 'UPDATE_LOCATION_SUCCESS';\nexport const UPDATE_LOCATION_FAILURE = 'UPDATE_LOCATION_FAILURE';","import React, { useState, useEffect, useCallback } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SwitchesGroup from \"./SwitchesGroup\";\nimport MapView from \"../MapView\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { locationList } from \"../../store/location/locationSelector\";\nimport { getLocation } from \"../../store/location/locationAction\";\n\nfunction Filter({ searchString }) {\n  const [state, setState] = useState({\n    waterFacilities: [],\n    toiletFacilities: [],\n    water: true,\n    toilet: true,\n  });\n\n  const dispatch = useDispatch();\n  const locationListSelector = useSelector(locationList);\n\n  const getLocationList = useCallback(() => {\n    dispatch(getLocation());\n  }, [dispatch]);\n  useEffect(() => {\n    getLocationList();\n  }, [getLocationList]);\n\n  const waterLocations = locationListSelector.filter(\n    (location) => location.water === true\n  );\n\n  const toiletLocations = locationListSelector.filter(\n    (location) => (location.femaleToilets || location.maleToilets) === true\n  );\n  console.log(\"waterlocations\", waterLocations);\n\n  const filterResults = (water, toilet) => {\n    console.log(\"FilterResults water:\", water);\n    console.log(\"FilterResults toilet:\", toilet);\n    if (!water) {\n      setState({ ...state, waterFacilities: [] });\n      setState({ ...state, water: false });\n    } else if (!toilet) {\n      setState({ ...state, toiletFacilities: [] });\n      setState({ ...state, toilet: false });\n    } else {\n      setState({ ...state, waterFacilities: waterLocations });\n      setState({ ...state, toiletFacilities: toiletLocations });\n      setState({ ...state, water: true });\n      setState({ ...state, toilet: true });\n    }\n  };\n\n  return (\n    <Grid container id=\"container\">\n      <Grid item xs={12} md={12}>\n        {<MapView searchString={searchString} />}\n      </Grid>\n      <Grid item xs={12} md={12}>\n        <SwitchesGroup filterResults={filterResults} />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction Copyright() {\n    return (\n      <div >\n    <Box mt={8}>\n      <Typography variant=\"body2\" align=\"center\" style={{color: \"rgba(255, 255, 255, 0.54)\"}}>\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"/\">\n          Splashpool\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n      </Box>\n      </div>\n    );\n  }\n\n\nexport default Copyright;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return (\n    <Button variant=\"outlined\" color=\"primary\" onClick={() => loginWithRedirect()}>\n      Log In\n    </Button>\n  );\n};\n\nexport default LoginButton;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n  return (\n    <Button variant=\"outlined\" color=\"primary\" onClick={() =>\n      logout({\n        returnTo: window.location.origin,\n      })\n    }>\n    Log Out\n  </Button>\n  );\n};\n\nexport default LogoutButton;","import React from \"react\";\n\nimport LoginButton from \"./LoginButton\";\nimport LogoutButton from \"./LogoutButton\";\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst AuthenticationButton = () => {\n  const { isAuthenticated } = useAuth0();\n\n  return isAuthenticated ? <LogoutButton /> : <LoginButton />;\n};\n\nexport default AuthenticationButton;","import React from \"react\";\nimport AuthenticationButton from \"./AuthenticationButton\";\n\nconst AuthNav = () => (\n    <AuthenticationButton />\n);\n\nexport default AuthNav;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport HomeIcon from '@material-ui/icons/Home';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport RoomIcon from '@material-ui/icons/Room';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n    drawerPaper: { width: 'inherit',\n    marginTop: 64,\n    [theme.breakpoints.down('sm')]: {\n        marginTop: 56\n    }\n    },\n    link: {\n      textDecoration: 'none',\n      color: theme.palette.text.primary\n    },\n    gutterBottom: {\n      marginBottom: '1.5rem'\n    }\n  });\n\nclass NavDrawer extends Component {\n    state = {  }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div style={{ display: 'flex' }}>\n          <Drawer\n            style={{ width: '240px' }}\n            varian=\"persistent\"\n            anchor=\"left\"\n            open={this.props.drawerOpened}\n            onClose={this.props.toggleDrawer(false)}\n            classes={{ paper: classes.drawerPaper }}\n          >\n            <List\n                      onClick={this.props.toggleDrawer(false)}\n                      onKeyDown={this.props.toggleDrawer(false)}\n            >\n              <Link to=\"/\" className={classes.link}>\n                <ListItem button>\n                  <ListItemIcon>\n                    <HomeIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={\"Home\"} />\n                </ListItem>\n              </Link>\n              <Link to=\"/locations\" className={classes.link}>\n                <ListItem button>\n                  <ListItemIcon>\n                    <MyLocationIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={\"Locations\"} />\n                </ListItem>\n              </Link>\n              <Link to=\"/manage-locations\" className={classes.link}>\n                <ListItem button>\n                  <ListItemIcon>\n                    <MyLocationIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={\"Manage Locations\"} />\n                </ListItem>\n              </Link>\n              <Link to=\"/location-details/:number\" className={classes.link}>\n                <ListItem button>\n                  <ListItemIcon>\n                    <RoomIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={\"Locations Details\"} />\n                </ListItem>\n              </Link>\n              <Link to=\"/search\" className={classes.link}>\n                <ListItem button>\n                  <ListItemIcon>\n                    <SearchIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={\"Search\"} />\n                </ListItem>\n              </Link>\n            </List>\n          </Drawer>\n        </div>\n        );\n    }\n}\n\nexport default withStyles(styles) (NavDrawer);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n//import AccountCircle from '@material-ui/icons/AccountCircle';\nimport AuthNav from \"../AuthNav\";\nimport NavDrawer from './NavDrawer'\n//import MenuItem from '@material-ui/core/MenuItem';\n//import Menu from '@material-ui/core/Menu';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n});\n\n// const [auth, setAuth] = React.useState(true);\n// const [anchorEl, setAnchorEl] = React.useState(null);\n// const open = Boolean(anchorEl);\n\nclass Header extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawerOpened: false\n    };\n  }\n  toggleDrawer = booleanValue => () => {\n    this.setState({\n      drawerOpened: booleanValue\n    });\n  };\n\n  // handleChange = (event) => {\n  //   setAuth(event.target.checked);\n  // };\n\n  // handleMenu = (event) => {\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n\n\n  render() {\n    const { classes } = this.props;\n    return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"transparent\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n          onClick={this.toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          \n          <div id=\"geocoder\" className=\"geocoder\"></div>\n          <Typography variant=\"h6\" className={classes.title}>\n            Oasis\n          </Typography>\n            <div>\n            <AuthNav />\n            {/* <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={this.handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={this.handleClose}\n              >\n                <MenuItem onClick={this.handleClose}>Profile</MenuItem>\n                <MenuItem onClick={this.handleClose}>My account</MenuItem>\n              </Menu> */}\n            </div>\n        </Toolbar>\n      </AppBar>\n\n      <NavDrawer\n          drawerOpened={this.state.drawerOpened}\n          toggleDrawer={this.toggleDrawer}\n        />\n      </div>\n  );\n }\n}\nexport default withStyles(styles) (Header);","import React from \"react\";\nimport image from \"../assets/images/loading.svg\";\nconst style = { position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\" };\n  \n\nconst Loading = () => (\n  <div style={style}>\n      <img src={image} alt=\"Loading...\" />\n  </div>\n);\n\nexport default Loading;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport Loading from \"../components/Loading\";\n\nconst ProtectedRoute = ({ component, ...args }) => (\n  <Route\n    component={withAuthenticationRequired(component, {\n      onRedirecting: () => <Loading />,\n    })}\n    {...args}\n  />\n);\n\nexport default ProtectedRoute;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport countryList from 'react-select-country-list';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { addLocation } from '../store/location/locationAction';\nimport { addLocationLoading } from '../store/location/locationSelector';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        minWidth: 300,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function AddLocation() {\n    const classes = useStyles();\n    const options = countryList().getData();\n\n    const dispatch = useDispatch();\n    const [open, setOpen] = React.useState(false);\n    const [locationName, setLocationName] = useState('');\n    const [address1, setAddress1] = useState('');\n    const [address2, setAddress2] = useState('');\n    const [city, setCity] = useState('');\n    const [postCode, setPostCode] = useState('');\n    const [country, setCountry] = useState('');\n    const addLocationLoadingSelector = useSelector(addLocationLoading);\n\n    const clearState = () => {\n        setLocationName('');\n        setAddress1('');\n        setAddress2('');\n        setCity('');\n        setPostCode('');\n        setCountry('');\n    }\n\n    const handleLocationNameChange = (e) => {\n        setLocationName(e.target.value);\n    }\n    const handleAdress1Change = (e) => {\n        setAddress1(e.target.value);\n    }\n    const handleAdress2Change = (e) => {\n        setAddress2(e.target.value);\n    }\n    const handleCityChange = (e) => {\n        setCity(e.target.value);\n    }\n    const handleCountryChange = (e) => {\n        setCountry(e.target.value);\n    };\n\n    const handlePostCodeChange = (e) => {\n        setPostCode(e.target.value);\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        clearState();\n        setOpen(false);\n    };\n\n    const handleSubmit = async () => {\n        console.log(locationName, address1, address2, city, postCode, country);\n\n        const geoCodingData = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${postCode}&key=${process.env.REACT_APP_GEOCODING_API_KEY}`);\n        const locationData = geoCodingData.data.results[0].geometry.location;\n\n        // const postcodesApiData = await axios.get(`https://api.postcodes.io/postcodes/${postCode}`);\n        // const locationData = postcodesApiData.data.result;\n        try {\n            await dispatch(addLocation({\n                locationName: locationName,\n                address1: address1,\n                address2: address2,\n                city: city,\n                postCode: postCode,\n                country: country,\n                // This works with postcodeApiData\n                // longitude: locationData.longitude,\n                // latitude: locationData.latitude,\n                longitude: locationData.lng,\n                latitude: locationData.lat,\n                adminOrg: \"\",\n                water: false,\n                drinkable: false,\n                treatment: false,\n                unknown: false,\n                largeWaterFacility: false,\n                maleToilets: false,\n                femaleToilets: false,\n                largeToiletFacility: false,\n                disabledAccess: false,\n                chargeForUse: false,\n                openingHours: \"\",\n                hasIssue: false\n            }));\n            setOpen(false);\n            clearState();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <div>\n            <Grid container justify=\"flex-end\" className=\"spl--pb\">\n                <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                    <AddIcon /> Add Location\n                </Button>\n            </Grid>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add Location</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Please enter your location details here.\n                    </DialogContentText>\n                    <form noValidate autoComplete=\"off\">\n                        <TextField\n                            margin=\"dense\"\n                            id=\"locationName\"\n                            label=\"Location Name\"\n                            placeholder=\"Enter location name\"\n                            type=\"text\"\n                            fullWidth\n                            required\n                            value={locationName}\n                            onChange={handleLocationNameChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"address1\"\n                            label=\"Address Line 1\"\n                            type=\"text\"\n                            fullWidth\n                            value={address1}\n                            onChange={handleAdress1Change}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"address2\"\n                            label=\"Address Line 2\"\n                            type=\"text\"\n                            fullWidth\n                            value={address2}\n                            onChange={handleAdress2Change}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"city\"\n                            label=\"City\"\n                            type=\"text\"\n                            fullWidth\n                            required\n                            value={city}\n                            onChange={handleCityChange}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"postcode\"\n                            label=\"Postcode\"\n                            type=\"text\"\n                            fullWidth\n                            value={postCode}\n                            onChange={handlePostCodeChange}\n                        />\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"country\">Country</InputLabel>\n                            <Select\n                                labelId=\"country\"\n                                id=\"country\"\n                                required\n                                value={country}\n                                onChange={handleCountryChange}\n                            >\n                                {options.map((item) => {\n                                    return (<MenuItem key={item.value} value={item.label}>{item.label}</MenuItem>);\n                                })}\n                            </Select>\n                        </FormControl>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={() => handleSubmit()} color=\"primary\">\n                        Add Location\n                        {addLocationLoadingSelector && <CircularProgress />}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { getLocation, deleteLocation } from '../store/location/locationAction';\nimport { locationList, getLocationLoading, deleteLocationLoading, updateLocationLoading} from '../store/location/locationSelector';\nimport AddLocation from './AddLocation';\n\nexport default function ListLocation() {\n    const dispatch = useDispatch();\n    const locationListSelector = useSelector(locationList);\n    const getLocationLoadingSelector = useSelector(getLocationLoading);\n    const deleteLocationLoadingSelector = useSelector(deleteLocationLoading);\n    const updateLocationLoadingSelector = useSelector(updateLocationLoading);\n    const [deleteLocationId, setDeleteLocationId] = useState(null);\n    const [updateLocationId, setUpdateLocationId] = useState(null);\n\n    const getLocationList = useCallback(() => {\n        dispatch(getLocation());\n    }, [dispatch]);\n    useEffect(() => {\n        getLocationList();\n    }, [getLocationList]);\n\n\n    const removeLocation = (location) => {\n        setDeleteLocationId(location.locationId);\n        dispatch(deleteLocation(location.locationId));\n    }\n\n    const updateLocationStatus = (location) => {\n        setUpdateLocationId(location.locationId);\n        dispatch(updateLocationStatus({\n            ...location\n        }))\n    }\n\n    return (\n        <div>\n            <Grid container spacing={0}>\n                <Grid item md></Grid>\n                <Grid item xs={12} md={6}>\n                    <Typography\n                        variant=\"h3\"\n                        component=\"h1\"\n                        gutterBottom\n                        className=\"spl--pb spl--pt\"\n                    >\n                        Manage Locations\n                    </Typography>\n                    {!getLocationLoadingSelector && (locationListSelector.length === 0) &&\n                        <Typography variant=\"body1\" gutterBottom className=\"spl--pb\">\n                            Locations list empty.\n                    </Typography>\n                    }\n                    {getLocationLoadingSelector && <LinearProgress />}\n                    <AddLocation />\n                    <div>\n                        <List>\n                            {locationListSelector.map(location => (\n                                <ListItem key={location.id}>\n                                    <ListItemText primary={location.locationName} />\n                                    <Button variant=\"contained\" color=\"primary\" aria-label=\"update\" onClick={() => updateLocationStatus(location)}>\n                                        <FontAwesomeIcon icon=\"pen\" />\n                                        {updateLocationLoadingSelector && (location.locationId === updateLocationId) && <CircularProgress color=\"secondary\" />}\n                                    </Button>\n                                    <Button variant=\"outlined\" color=\"secondary\" style={{ marginLeft: '0.5rem' }} aria-label=\"delete\" onClick={() => removeLocation(location)}>\n                                        <FontAwesomeIcon icon=\"trash-alt\" />\n                                        {deleteLocationLoadingSelector && (location.locationId === deleteLocationId) && <CircularProgress color=\"secondary\" />}\n                                    </Button>\n                                    <Link to={`/location-details/${location.locationId}`}>\n                                        <Button variant=\"outlined\" color=\"primary\" style={{ marginLeft: '0.5rem' }} aria-label=\"display\">\n                                            <FontAwesomeIcon icon=\"eye\" />\n                                        </Button>\n                                    </Link>\n                                </ListItem>\n                            ))}\n                        </List>\n                    </div>\n                </Grid>\n                <Grid item md></Grid>\n            </Grid>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport Profile from \"./components/Profile\";\nimport LocationDetails from \"./components/LocationDetails\";\nimport \"fontsource-montserrat\";\nimport Search from \"./components/Search/Search.jsx\";\nimport Filters from \"./components/Filters/Filters\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faHandHoldingWater,\n  faTrash,\n  faTrashAlt,\n  faPen,\n  faEye,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Copyright from \"./components/Copyright\";\nimport Header from \"./components/Header/Header\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Loading from \"./components/Loading\";\nimport ProtectedRoute from \"./auth/protected-route\";\n//import axios from \"axios\";\nimport ManageLocations from \"./components/ManageLocations\";\n\nlibrary.add(fab, faHandHoldingWater, faTrash, faTrashAlt, faPen, faEye);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1FB0F5\",\n    },\n  },\n  typography: {\n    fontFamily: [\n      '\"Montserrat\"',\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n});\n\nconst App = () => {\n  const { isLoading } = useAuth0();\n\n  // useEffect(() => {\n  //   axios.get('https://j33niy2o35.execute-api.eu-west-2.amazonaws.com/dev/locations', { crossdomain: true }\n  //   )\n  //   .then((response) => {\n  //     console.log(response);\n  //   }, (error) => {\n  //     console.log(error);\n  //   }, []\n  //   )\n  // });\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  // const [locations, setlocation] = useState([\n  //   {\n  //     id: 1,\n  //     name: \"london\",\n  //     longitude: \"51.5074\",\n  //     latitude: \" 0.1278\",\n  //     status: \"Drinkable\",\n  //   },\n  //   {\n  //     id: 2,\n  //     name: \"Santiago\",\n  //     longitude: \"54.5074\",\n  //     latitude: \" 7.1278\",\n  //     status: \"Need traitment\",\n  //   },\n  //   {\n  //     id: 3,\n  //     name: \"Santiago\",\n  //     longitude: \"94.5074\",\n  //     latitude: \" 7.1278\",\n  //     status: \"Drinkable\",\n  //   },\n  //   {\n  //     id: 4,\n  //     name: \"Santiago\",\n  //     longitude: \"04.5074\",\n  //     latitude: \" 7.1278\",\n  //     status: \"Uknown\",\n  //   },\n  // ]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <StylesProvider injectFirst>\n        <Router>\n          <Header />\n          <Container maxWidth=\"md\">\n            <Switch>\n              <Route path=\"/locations\">\n                <Filters />\n              </Route>\n              <Route path=\"/search\" component={Search} />\n              <Route path=\"/manage-locations\" component={ManageLocations} />\n              <ProtectedRoute path=\"/profile\" component={Profile} />\n              <Route\n                path=\"/location-details/:number\"\n                component={LocationDetails}\n              />\n              <Route path=\"/\" exact={true} component={Home} />\n            </Switch>\n          </Container>\n          <Copyright />\n        </Router>\n      </StylesProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as userActionType from './userActionType';\n\nconst initialUserState = {\n    userList: []\n}\n\nconst userReducer = (state = initialUserState, { type, payload }) => {\n    switch (type) {\n        case userActionType.GET_USER:\n            return {\n                ...state,\n                userList: payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default userReducer;","export const GET_USER = 'GET_USER';\nexport const GET_USER_BEGINS = 'GET_USER_BEGINS';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILURE = 'GET_USER_FAILURE';","import * as locationActionType from './locationActionType';\n\nconst initialLocationState = {\n    locationList: [],\n    getLocationLoading: false,\n    addLocationLoading: false,\n    deleteLocationLoading: false,\n    updateLocationLoading: false\n}\n\nconst locationReducer = (state = initialLocationState, { type, payload }) => {\n    switch (type) {\n        case locationActionType.GET_LOCATION_BEGINS:\n            return {\n                ...state,\n                getLocationLoading: true\n            }\n        case locationActionType.GET_LOCATION_SUCCESS:\n            return {\n                ...state,\n                locationList: payload,\n                getLocationLoading: false\n            }\n        case locationActionType.GET_LOCATION_FAILURE:\n            return {\n                ...state,\n                getLocationLoading: false\n            }\n        case locationActionType.ADD_LOCATION_BEGINS:\n            return {\n                ...state,\n                addLocationLoading: true\n            }\n        case locationActionType.ADD_LOCATION_SUCCESS:\n            return {\n                ...state,\n                locationList: [...state.locationList, payload],\n                addLocationLoading: false\n            }\n        case locationActionType.ADD_LOCATION_FAILURE:\n            return {\n                ...state,\n                addLocationLoading: false\n            }\n        case locationActionType.DELETE_LOCATION_BEGINS:\n            return {\n                ...state,\n                deleteLocationLoading: true\n            }\n        case locationActionType.DELETE_LOCATION_SUCCESS:\n            return {\n                ...state,\n                locationList: state.locationList.filter(location => location.locationId !== payload),\n                deleteLocationLoading: false\n            }\n        case locationActionType.DELETE_LOCATION_FAILURE:\n            return {\n                ...state,\n                deleteLocationLoading: false\n            }\n        case locationActionType.UPDATE_LOCATION_BEGINS:\n            return {\n                ...state,\n                updateLocationLoading: true\n            }\n        case locationActionType.UPDATE_LOCATION_SUCCESS:\n            return {\n                ...state,\n                locationList: state.locationList.map(location => (location.locationId === payload.locationId) ? payload : location),\n                updateLocationLoading: false\n            }\n        case locationActionType.UPDATE_LOCATION_FAILURE:\n            return {\n                ...state,\n                updateLocationLoading: false\n            }\n        default:\n            return state\n    }\n}\n\nexport default locationReducer;","import { combineReducers } from 'redux';\nimport userReducer from './user/userReducer';\nimport locationReducer from './location/locationReducer';\n\nconst reducer = combineReducers({\n    user: userReducer,\n    location: locationReducer\n})\n\nexport default reducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogger } from 'redux-logger';\n\nimport reducer from './rootReducer';\n\nconst logger = createLogger({\n    collapsed: true\n  });\n\nconst store = createStore(reducer, undefined, composeWithDevTools(applyMiddleware(thunk, logger)));\n\nexport default store;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n  const history = useHistory();\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\n\n  const onRedirectCallback = (appState) => {\n    history.push(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n      audience={audience}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Auth0ProviderWithHistory from \"./auth/auth0-provider-with-history\";\n\ntoast.configure({\n  autoClose: 1500\n})\n\nReactDOM.render(\n  <Router>\n    <Auth0ProviderWithHistory>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Auth0ProviderWithHistory>\n  </Router>,\n  document.getElementById('root')\n);\nserviceWorker.register();"],"sourceRoot":""}